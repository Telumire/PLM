

{"created":"20230415161324505","text":"{\"tiddlers\": {\n\"$:/plugins/Telumire/RSS/button\": {\n    \"created\": \"20230418155040837\",\n    \"text\": \"\\\\whitespace trim\\n\\\\import $:/plugins/Telumire/RSS/xml\\n\\n\\\\define toggle-text(tiddler)\\n\u003C$tiddler tiddler=\u003C\u003C__tiddler__>> >\\n\u003C$action-setmultiplefields $fields=\\\"text disabled-text\\\" $values=\\\"=[{!!disabled-text}] =[{!!text}]\\\"/>\\n\u003C/$tiddler>\\n\\\\end\\n\\n\\\\define discoverfeed-content()\\n`\u003Clink\\nrel=\\\"alternate\\\"\\ntype=\\\"application/rss+xml\\\" \\ntitle=\\\"`{{{ [subfilter\u003Ctitle>] }}}`\\\"\\nhref=\\\"`{{{ [subfilter\u003Cbase>] [subfilter\u003Cpath>] [subfilter\u003Cfilename>] }}}`\\\"\\n/>`\\n\\\\end\\n\\n\\\\define create-discoverfeed()\\n\u003C$wikify name=\\\"text\\\" text=\u003C\u003Cdiscoverfeed-content>> type=\\\"text/vnd.tiddlywiki\\\" mode=\\\"block\\\" output=\\\"text\\\">\\n\u003C$action-setfield $tiddler=\\\"$:/plugins/Telumire/RSS/discoverfeed\\\" text=\u003C\u003Ctext>> tags=\\\"$:/tags/RawMarkup\\\" type=\\\"text/plain\\\"/>\\n\u003C/$wikify>\\n\\\\end\\n\\n\\\\define create-rss()\\n\u003C$wikify name=\\\"text\\\" text={{$:/plugins/Telumire/RSS/xml}} type=\\\"text/vnd.tiddlywiki\\\" mode=\\\"block\\\" output=\\\"text\\\">\\n\u003C$action-setfield $tiddler={{{ [subfilter\u003Cfilename>] }}} text=\u003C\u003Ctext>> type=\\\"text/plain\\\"/>\\n\u003C/$wikify>\\n\\\\end\\n\\n\\\\define upload-rss()\\n\u003C$list filter=\\\"[subfilter{$:/plugins/Telumire/ReadOnly/settings!!ReadOnlyFilter}!match[true]]\\\">\\n\\n\u003C!-- disable autosave -->\\n\u003C$list filter=\\\"[{$:/GitHub/AutoSave!!disabled-text}match[]]\\\">\\n\u003C\u003Ctoggle-text \\\"$:/config/AutoSave\\\">>\\n\u003C/$list>\\n\\n\u003C!-- enable github saver by restoring the github username -->\\n\u003C$list filter=\\\"[{$:/GitHub/Username!!disabled-text}!match[]]\\\">\\n\u003C\u003Ctoggle-text \\\"$:/GitHub/Username\\\">>\\n\u003C/$list>\\n\\n\u003C!-- create rss -->\\n\u003C\u003Ccreate-rss>>\\n\\n\u003C!-- create discoverfeed -->\\n\u003C\u003Ccreate-discoverfeed>>\\n\\n\u003C!-- upload rss -->\\n\u003C$list filter=\\\"[{$:/config/file-uploads/github/uploadpath}!match[rss]]\\\">\\n\u003C\u003Ctoggle-tiddler \\\"$:/config/file-uploads/github/uploadpath\\\">>\\n\u003C$action-setfield $tiddler=\\\"$:/config/file-uploads/github/uploadpath\\\" text=\\\"rss\\\"/>\\n\u003C/$list>\\n\\n\u003C$action-sendmessage $message=\\\"tm-upload-tiddlers\\\" $param=\\\"[[$(filename)$]]\\\"/> \\n\\n\u003C$list filter=\\\"[{$:/config/file-uploads/github/uploadpath}match[rss]]\\\">\\n\u003C\u003Ctoggle-tiddler \\\"$:/config/file-uploads/github/uploadpath\\\">>\\n\u003C/$list>\\n\\n\u003C!-- delete rss --> \\n\u003C$action-deletetiddler $tiddler=\\\"[[$(filename)$]]\\\" /> \\n\\n\u003C!-- disable github saver by toggling the github username -->\\n\u003C\u003Ctoggle-text \\\"$:/GitHub/Username\\\">>\\n\\n\u003C!-- toggle autosave -->\\n\u003C\u003Ctoggle-text \\\"$:/config/AutoSave\\\">>\\n\\n\u003C/$list>\\n\\\\end\\n\\n\u003C$setmultiplevariables\\n$names=\\\"[\u003Cdefaults-settings>indexes[]]\\\"\\n$values=\\\"[\u003Cdefaults-settings>indexes[]]:map[subfilter\u003Cget-custom-else-default>]\\\"\\n>\\n\u003C$button\\ntooltip=\\\"send feed to GitHub\\\"\\nclass=\u003C\u003Ctv-config-toolbar-class>>\\naria-label=\\\"send feed to GitHub\\\"\\nactions=\u003C\u003Cupload-rss>>\\n>\\n\u003C$list filter=\\\"[\u003Ctv-config-toolbar-icons>match[yes]]\\\">\\n\u003C$transclude tiddler=\\\"$:/plugins/Telumire/RSS/icon\\\"/>\\n\u003C/$list>\\n\u003C$list filter=\\\"[\u003Ctv-config-toolbar-text>match[yes]]\\\">\\n\u003Cspan class=\\\"tc-btn-text\\\">\\n\u003C$text text=\\\"send feed to GitHub\\\"/>\\n\u003C/span>\\n\u003C/$list>\\n\u003C/$button>\\n\u003C/$setmultiplevariables>\",\n    \"tags\": \"$:/tags/PageControls\",\n    \"title\": \"$:/plugins/Telumire/RSS/button\",\n    \"modified\": \"20230509015419993\",\n    \"type\": \"\",\n    \"code-body\": \"yes\"\n},\n\n\"$:/plugins/Telumire/RSS/data/custom\": {\n    \"created\": \"20230417193739264\",\n    \"text\": \"{\\n    \\\"base\\\": \\\"=\\\\\\\"https://\\\\\\\" =[{$:/GitHub/Username!!disabled-text}] =\\\\\\\".github.io\\\\\\\" =[{$:/GitHub/Repo}removeprefix{$:/GitHub/Username!!disabled-text}] =[{$:/GitHub/Path}]\\\",\\n    \\\"date-format\\\": \\\"[UTC]ddd, 0DD mmm YYYY 0hh:0mm:0ss GMT\\\",\\n    \\\"description\\\": \\\"[{$:/SiteSubtitle}]\\\",\\n    \\\"domain\\\": \\\"[{$:/info/url/origin}]\\\",\\n    \\\"filename\\\": \\\"xml.rss\\\",\\n    \\\"filter\\\": \\\"[has[plugin-draft]]\\\",\\n    \\\"language\\\": \\\"en-GB\\\",\\n    \\\"path\\\": \\\"[{$:/config/file-uploads/github/uploadpath}addsuffix[/]]\\\",\\n    \\\"title\\\": \\\"[{$:/SiteTitle}]\\\",\\n    \\\"item-template\\\": \\\"$:/plugins/Telumire/RSS/itemTemplate/history\\\"\\n}\",\n    \"title\": \"$:/plugins/Telumire/RSS/data/custom\",\n    \"modified\": \"20230509005604811\",\n    \"type\": \"application/json\",\n    \"caption\": \"custom\"\n},\n\n\"$:/plugins/Telumire/RSS/data/defaults\": {\n    \"created\": \"20230417143544772\",\n    \"text\": \"{\\n    \\\"base\\\": \\\"https://[{$:/GitHub/Username}].github.io[{$:/GitHub/Repo}removeprefix{$:/GitHub/Username}][{$:/GitHub/Path}]\\\",\\n    \\\"filename\\\": \\\"xml.rss\\\",\\n    \\\"filter\\\": \\\"[[article]tagging[]limit[10]]\\\",\\n    \\\"language\\\": \\\"en-GB\\\",\\n    \\\"path\\\": \\\"[{$:/config/file-uploads/github/uploadpath}]=\\\\\\\"/\\\\\\\"\\\",\\n    \\\"title\\\": \\\"[{$:/SiteTitle}]\\\",\\n    \\\"description\\\": \\\"[{$:/SiteSubtitle}]\\\",\\n    \\\"domain\\\": \\\"[{$:/info/url/origin}]\\\",\\n    \\\"date-format\\\": \\\"[UTC]ddd, 0DD mmm YYYY 0hh:0mm:0ss GMT\\\",\\n\\\"item-template\\\":\\\"$:/core/ui/ViewTemplate/body/default\\\"\\n}\",\n    \"title\": \"$:/plugins/Telumire/RSS/data/defaults\",\n    \"modified\": \"20230509004553799\",\n    \"type\": \"application/json\",\n    \"caption\": \"defaults\"\n},\n\n\"$:/plugins/Telumire/RSS/discoverfeed\": {\n    \"created\": \"20230418215633930\",\n    \"text\": \"\u003Clink\\nrel=\\\"alternate\\\"\\ntype=\\\"application/rss+xml\\\" \\ntitle=\\\"PLM\\\"\\nhref=\\\"https://Telumire.github.io/PLM/tiddlers/xml.rss\\\"\\n/>\",\n    \"title\": \"$:/plugins/Telumire/RSS/discoverfeed\",\n    \"modified\": \"20230509015442435\",\n    \"tags\": \"$:/tags/RawMarkup\",\n    \"type\": \"text/plain\"\n},\n\n\"$:/plugins/Telumire/RSS/icon\": {\n    \"created\": \"20211006120303317\",\n    \"text\": \"\u003Csvg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 8 8\\\" width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-RSS tc-image-button\\\">\u003Cpath d=\\\"M1 2A5 5 0 016 7H7A6 6 0 001 1ZM1 4A3 3 0 014 7H5A4 4 0 001 3ZM3 6A1 1 0 012 7A1 1 0 011 6A1 1 0 012 5A1 1 0 013 6Z\\\"/>\u003C/svg>\",\n    \"creator\": \"Telumire\",\n    \"title\": \"$:/plugins/Telumire/RSS/icon\",\n    \"modified\": \"20230508110342521\",\n    \"tags\": \"$:/tags/Image\",\n    \"revision\": \"0\",\n    \"bag\": \"default\",\n    \"modifier\": \"Telumire\",\n    \"domain\": \".rss .atom\"\n},\n\n\"$:/plugins/Telumire/RSS/itemTemplate/history\": {\n    \"created\": \"20230509005152111\",\n    \"text\": \"\u003C$list variable=\\\"version\\\" filter=\\\"[{!!title}fields[]removeprefix[version-]!sort[]]\\\">\\n\\n\u003Ch2>\u003C\u003Cversion>>\u003C/h2>\\n\\n\u003C$transclude field={{{ \\\"version-\\\"[\u003Cversion>]+[join[]] }}} mode=\\\"block\\\"/>\\n\\n\u003C/$list>\",\n    \"tags\": \"\",\n    \"title\": \"$:/plugins/Telumire/RSS/itemTemplate/history\",\n    \"modified\": \"20230509012008803\",\n    \"code-body\": \"yes\"\n},\n\n\"$:/plugins/Telumire/RSS/plugin.info\": {\n    \"created\": \"20230415180844034\",\n    \"title\": \"$:/plugins/Telumire/RSS/plugin.info\",\n    \"type\": \"application/json\",\n    \"text\": \"{\\n    \\\"title\\\": \\\"$:/plugins/Telumire/RSS\\\",\\n    \\\"name\\\": \\\"RSS\\\",\\n    \\\"description\\\": \\\"Generate rss feeds for your wiki\\\",\\n    \\\"author\\\": \\\"Telumire\\\",\\n    \\\"version\\\": \\\"0.0.3\\\",\\n    \\\"core-version\\\": \\\"5.2.7\\\",\\n    \\\"source\\\": \\\"https://plm.tiddlyhost.com/#:[[$:/plugins/Telumire/RSS]]\\\",\\n    \\\"list\\\": \\\"readme settings\\\",\\n    \\\"parent-plugin\\\": \\\"$:/plugins/commons/file-uploads\\\",\\n    \\\"dependents\\\": \\\"$:/plugins/commons/file-uploads-github\\\",\\n    \\\"plugin-type\\\": \\\"plugin\\\",\\n    \\\"packaged-by\\\": \\\"Gatha on 9th May 2023, 03:45:31\\\"\\n}\",\n    \"modified\": \"20230509014531429\"\n},\n\n\"$:/plugins/Telumire/RSS/readme\": {\n    \"created\": \"20230415231258456\",\n    \"text\": \"{{||$:/plugins/Telumire/Commons/templates/readme}}\",\n    \"title\": \"$:/plugins/Telumire/RSS/readme\",\n    \"type\": \"text/vnd.tiddlywiki\",\n    \"tags\": \"\",\n    \"modified\": \"20230508110342706\"\n},\n\n\"$:/plugins/Telumire/RSS/settings\": {\n    \"created\": \"20230418143844148\",\n    \"text\": \"\u003C$tiddler tiddler=\\\"$:/plugins/Telumire/RSS/settings\\\">\\n\u003Canchor id={{{# [{!!title}] +[join[]] }}} />\\n\u003C$importvariables filter=\\\"$:/plugins/Telumire/RSS/xml\\\">\\n\u003C$setmultiplevariables\\n$names=\\\"[\u003Cdefaults-settings>indexes[]] tv-wikilink-template\\\"\\n$values=\\\"[\u003Cdefaults-settings>indexes[]]:map[subfilter\u003Cget-custom-else-default>] $(domain)$#$uri_encoded$\\\"\\n>\\n Validate feed : by [[input|https://validator.w3.org/feed/#validate_by_input]] or \u003Ca href={{{ \\\"https://www.rssboard.org/rss-validator/check.cgi?url=\\\"[\u003Cbase>][\u003Cpath>][\u003Cfilename>] :map:flat[subfilter{!!title}]+[join[]] }}}>check the uploaded feed\u003C/a>. \\n\u003C/$setmultiplevariables>\\n\u003C/$importvariables>\\n\\n\u003C$macrocall $name=\\\"tabs\\\"\\ntabsList={{!!tabsList}}\\ntemplate=\\\"$:/plugins/Telumire/RSS/settings/template\\\" \\nexplicitState=\\\"$:/plugins/Telumire/RSS/settings!!tab\\\"\\ndefault={{{ [{!!tab}!match[]else[custom]] }}}\\n/>\\n\\n\\n\u003Cstyle>.tc-btn-big-green{cursor:pointer}\u003C/style>\\n\u003C$let tv-config-toolbar-text=\\\"yes\\\" tv-config-toolbar-class=\\\"tc-btn-big-green\\\">\\n{{$:/plugins/Telumire/RSS/button}}\\n\u003C/$let>\\n\u003C/$tiddler>\",\n    \"title\": \"$:/plugins/Telumire/RSS/settings\",\n    \"tags\": \"$:/tags/ControlPanel/Settings\",\n    \"modified\": \"20230509004623721\",\n    \"tabsList\": \"custom defaults [[rss preview]]\",\n    \"tab\": \"custom\",\n    \"edit-view\": \"form\",\n    \"caption\": \"RSS\"\n},\n\n\"$:/plugins/Telumire/RSS/settings/template\": {\n    \"created\": \"20230417143026961\",\n    \"text\": \"\\\\define toggle-edit-template()\\n\u003C$action-listops  $field=\\\"edit-view\\\" $subfilter=\\\"+[toggle[form]first[]]\\\" />\\n\\\\end\\n\\\\define reset(indexes)\\n\u003C$action-setmultiplefields\\n$tiddler=\u003C\u003Ccustom-settings>>\\n$indexes=\\\"[subfilter\u003C__indexes__>]\\\"\\n$values=\\\"[subfilter\u003C__indexes__>] :map[\u003Cdefaults-settings>getindex{!!title}]\\\"/>\\n\\\\end\\n\\n\\\\define reset-btn(text,filter,tooltip)\\n\u003C$list filter=\\\"[\u003Ctab>match[custom]]\\\" variable=\\\"ignore\\\">\\n\u003C$button class=\\\"tc-btn-invisible\\\" tooltip=\u003C\u003C__tooltip__>> >\\n{{$:/core/images/refresh-button}} $text$\u003C\u003Creset \\\"$filter$\\\">>\\n\u003C/$button>\\n\u003C/$list>\\n\\\\end\\n\\n\\\\define tab-form()\\n\u003Cstyle>.dimmed{opacity:.5;}\u003C/style>\\n\u003C$importvariables filter=\\\"$:/plugins/Telumire/RSS/xml\\\">\\n\u003C$let data=\\\"[\u003Ctab>match[defaults]then\u003Cdefaults-settings>else\u003Ccustom-settings>]\\\" indexes=\\\"[\u003Cdefaults-settings>indexes[]]\\\">\u003C$button tag=\\\"code\\\" actions=\u003C\u003Ctoggle-edit-template>> class={{{  \\n[{!!edit-view}match[form]then[dimmed]] [[tc-btn-invisible]] +[join[ ]]\\n}}}> JSON\u003C/$button>\\n\\n\u003C\u003Creset-btn text:\\\"reset all\\\" filter:\\\"[subfilter\u003Cindexes>]\\\" tooltip:\\\"reset all values\\\">>\\n\\n\u003C$list filter=\\\"[{!!edit-view}match[form]]\\\" variable=\\\"ignore\\\" emptyMessage=\\\"\\\"\\\"\\n\u003C$edit-text tiddler={{{ [subfilter\u003Cdata>] }}} class=\\\"tc-edit-texteditor\\\"/>\\n\\\"\\\"\\\">\\n\u003Ctable class=\\\"tc-max-width tc-edit-max-width\\\">\\n\u003C$list filter=\u003C\u003Cindexes>> variable=\\\"index\\\">\\n\u003Ctr>\\n\u003Ctd>\\n\u003C\u003Cindex>>\\n\u003C/td>\\n\u003Ctd>\\n\u003C$edit-text\\ntag=\\\"input\\\"\\nindex=\u003C\u003Cindex>>\\ntiddler={{{ [subfilter\u003Cdata>] }}}\\nplaceholder={{{ [\u003Cdefaults-settings>getindex\u003Cindex>]:filter[\u003Ctab>match[custom]] }}}\\n/>\\n\u003C\u003Creset-btn filter:\\\"[\u003Cindex>]\\\" tooltip:\\\"reset value\\\">>\\n\u003C/td>\\n\u003C/tr>\\n\u003C/$list>\\n\u003C/table>\\n\u003C/$list>\\n\u003C/$let>\\n\u003C/$importvariables>\\n\\\\end\\n\\n\\\\define tab-rss()\\n\u003C$checkbox field=\\\"edit-template\\\" checked=\\\"yes\\\"> Edit template\u003C/$checkbox>\\n\u003C$list filter=\\\"[{!!edit-template}!match[yes]]\\\" variable=\\\"ignore\\\">\\n\u003C$wikify name=\\\"code\\\" text={{$:/plugins/Telumire/RSS/xml}}>\\n\u003C$macrocall $name=\\\"copy-to-clipboard\\\" src=\u003C\u003Ccode>> />\\n\u003C$codeblock code=\u003C\u003Ccode>> />\\n\u003C/$wikify>\\n\u003C$codeblock code={{$:/plugins/Telumire/RSS/discoverfeed}} />\\n\u003C/$list>\\n\u003C$list filter=\\\"[{!!edit-template}match[yes]then[$:/plugins/Telumire/RSS/xml]]\\\" template=\\\"$:/core/ui/EditTemplate/body/default\\\"/>\\n\\\\end\\n\\n\u003C$list filter=\\\"custom defaults :filter[\u003C..currentTiddler>get[tab]match{!!title}]\\\" variable=\\\"tab\\\">\u003C\u003Ctab-form>>\u003C/$list>\\n\u003C$list filter=\\\"[{!!tab}match[rss preview]]\\\" variable=\\\"tab\\\">\u003C\u003Ctab-rss>>\u003C/$list>\",\n    \"title\": \"$:/plugins/Telumire/RSS/settings/template\",\n    \"tags\": \"\",\n    \"modified\": \"20230508110343264\",\n    \"type\": \"\",\n    \"code-body\": \"yes\"\n},\n\n\"$:/plugins/Telumire/RSS/TLDR\": {\n    \"created\": \"20230428004650963\",\n    \"text\": \"[[Create a github account|https://github.com/signup]] and a [[repo|https://github.com/new]] if you dont have one, [[enable github page|https://docs.github.com/en/pages/quickstart]] and  [[create a token|https://github.com/settings/tokens/new?scopes=repo&description=tw]], then fill-in your info in \u003C\u003Clink-to-controlpanel-tab sub-tab:\\\"$:/core/ui/ControlPanel/Saving/GitHub\\\">>. The repo should at least contains a readme file, otherwise it wont work !\\n\\nThis plugin use the [[FileUpload plugin|$:/plugins/commons/file-uploads]] by Saq Imtiaz to upload the RSS feed to github.\\n\\n{{$:/plugins/Telumire/RSS/uninstall}}\",\n    \"title\": \"$:/plugins/Telumire/RSS/TLDR\",\n    \"type\": \"text/vnd.tiddlywiki\",\n    \"tags\": \"\",\n    \"modified\": \"20230508110343148\"\n},\n\n\"$:/plugins/Telumire/RSS/uninstall\": {\n    \"created\": \"20230419043113657\",\n    \"text\": \"\\\\define uninstall-plugin(plugin) \u003C$action-deletetiddler $filter=\\\"[prefix[$:/plugins/Telumire/$plugin$]]\\\"/>\\n\\n\u003C$button actions=\u003C\u003Cuninstall-plugin \\\"RSS\\\">>>{{$:/core/images/delete-button}} Uninstall telumire's RSS plugin\u003C/$button>\",\n    \"tags\": \"\",\n    \"title\": \"$:/plugins/Telumire/RSS/uninstall\",\n    \"modified\": \"20230508110343061\"\n},\n\n\"$:/plugins/Telumire/RSS/xml\": {\n    \"created\": \"20230418155312531\",\n    \"text\": \"\\\\whitespace trim\\n\\\\define defaults-settings() $:/plugins/Telumire/RSS/data/defaults\\n\\\\define custom-settings() $:/plugins/Telumire/RSS/data/custom\\n\\\\define get-custom-else-default() [\u003Ccustom-settings>getindex{!!title}]:else[\u003Cdefaults-settings>getindex{!!title}]\\n\\\\define f(filter) \u003C$text text={{{ $filter$ +[join[]] }}}/>\\n\\\\define feed-item()\\n`\u003Citem>\\n      \u003Ctitle>`\u003C$view field=\\\"title\\\" format=\\\"encodehtml\\\"/>`\u003C/title>\\n      \u003Cdescription>`\u003C$view field=\\\"summary\\\" format=htmlencodedplainwikified/>`\u003C/description>\\n      \u003Ccategory>`{{{[all[current]tags[]sortan[]join[/]]}}}`\u003C/category>\\n      \u003Ccontent:encoded>\u003C![CDATA[`\u003C$let\\n      tv-wikilink-template={{{ $(domain)$ \\\"#$uri_encoded$\\\" +[join[]]}}}\\n      >\u003C$wikify name=\\\"content\\\" output=\\\"html\\\" text=\\\"\\\"\\\"\u003C$transclude tiddler=\\\"$(item-template)$\\\"/>\\\"\\\"\\\">\u003C$text text={{{ [\u003Ccontent>search-replace:g[\\n],[]]}}}/>\u003C/$wikify>\u003C/$let>`]]>\u003C/content:encoded>\\n\\t  \u003CpubDate>`{{{[{!!modified}else{!!created}format:date\u003Cdate-format>]}}}`\u003C/pubDate>\\n      \u003Clink>`\u003C\u003Cf \\\"$(domain)$#[{!!title}encodeuri[]]\\\">>`\u003C/link>\\n      \u003Cguid isPermaLink='true'>`\u003C\u003Cf \\\"$(domain)$#[{!!title}encodeuri[]]\\\">>`\u003C/guid>\\n\u003C/item>`\\n\\\\end\\n\u003C$setmultiplevariables\\n$names=\\\"[\u003Cdefaults-settings>indexes[]] tv-wikilink-template\\\"\\n$values=\\\"[\u003Cdefaults-settings>indexes[]]:map[subfilter\u003Cget-custom-else-default>] $(domain)$#$uri_encoded$\\\"\\n>\\n`\u003C?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n\u003Crss version=\\\"2.0\\\" xmlns:atom=\\\"http://www.w3.org/2005/Atom\\\" xmlns:content=\\\"http://purl.org/rss/1.0/modules/content/\\\">\\n\u003Cchannel>\\n  \u003Catom:link href=\\\"`\u003C\u003Cf \\\"$(base)$$(path)$$(filename)$\\\">>`\\\" rel=\\\"self\\\" type=\\\"application/rss+xml\\\" />\\n  \u003Ctitle>`\u003C\u003Cf \\\"$(title)$\\\">>`\u003C/title>\\n  \u003Clink>`\u003C\u003Cf \\\"$(domain)$\\\">>`\u003C/link>\\n  \u003Cdescription>`\u003C\u003Cf \\\"$(description)$\\\">>`\u003C/description>\\n  \u003Clanguage>`\u003C\u003Cf \\\"$(language)$\\\">>`\u003C/language>\\n  \u003ClastBuildDate>`\u003C\u003Cf \\\"[!is[system]!is[draft]!sort[modified]first[]get[modified]format:date\u003Cdate-format>]\\\">>`\u003C/lastBuildDate>`\\n\\t\u003C$list filter=\u003C\u003Cfilter>> >\u003C\u003Cfeed-item>>\u003C/$list>`\\n\u003C/channel>\\n\u003C/rss>` \\n\\n\u003C/$setmultiplevariables>\",\n    \"tags\": \"\",\n    \"title\": \"$:/plugins/Telumire/RSS/xml\",\n    \"modified\": \"20230509011907899\",\n    \"code-body\": \"yes\"\n},\n\n\"$:/plugins/Telumire/Commons/templates/readme\": {\n    \"created\": \"20230427230707020\",\n    \"text\": \"\u003C$list filter=\\\"[{!!title}split[/]first[4]join[/]]\\\" variable=\\\"plugin\\\">\\n\u003C$list filter=\\\"[\u003Cplugin>]:filter[all[tiddlers+shadows]prefix\u003Cplugin>search:tags[$:/tags/ControlPanel]]\\\">\\n\u003C!-- If the plugin contains a tiddler that is listed in one of the controlpanel tabs -->\\n\\n\u003C\u003Clink-to-controlpanel-tab>>\\n\\n\u003C/$list>\\n\u003C$list filter=\\\"[all[tiddlers+shadows]prefix\u003Cplugin>suffix[FAQ]limit[1]]\\\">\\n\\n;FAQ\\n\\n\u003Cul class=\\\"help\\\">\\n\u003C$list filter=\\\"[{!!title}tagging[]sort[list]]\\\">\\n\u003Cli>\\n\u003Cdetails>\u003Csummary>\u003C$link>\u003C$text text={{{ [{!!title}split[/]last[]] }}}/>\u003C/$link>\u003C/summary>\\n\u003C$transclude mode=\\\"block\\\"/>\\n\u003C/details>\\n\u003C/li>\\n\u003C/$list>\\n\u003C/ul>\\n\\n\u003C/$list>\\n\u003C$list filter=\\\"[all[tiddlers+shadows]prefix\u003Cplugin>suffix[TLDR]limit[1]]\\\">\\n\\n;TL;DR\\n\\n\u003C$transclude mode=\\\"block\\\"/>\\n\u003C/$list>\\n{{$:/plugins/Telumire/Commons/templates/readme!!thanks}}\\n\u003C/$list>\",\n    \"tags\": \"\",\n    \"title\": \"$:/plugins/Telumire/Commons/templates/readme\",\n    \"modified\": \"20230508110327939\",\n    \"code-body\": \"yes\",\n    \"thanks\": \"\u003C$list filter=\\\"[{$:/info/url/host}!match[plm.tiddlyhost.com]]\\\">\\n\\n\u003C\u003C\u003C\\nHello there {{$:/status/UserName}}! Your help is critical to the future of this plugin. Keep it alive and thriving by showing your support on [[Ko-fi|https://ko-fi.com/telumire]] today! 🤗\\n\u003C\u003C\u003C\\n\\n\u003C/$list>\"\n},\n\n\"$:/plugins/Telumire/Commons/styles/openControlPanelTab\": {\n    \"created\": \"20230425225538415\",\n    \"text\": \".tc-tiddlylink.tc-tiddlylink-shadow{cursor:pointer;}\",\n    \"tags\": \"$:/tags/Stylesheet\",\n    \"title\": \"$:/plugins/Telumire/Commons/styles/openControlPanelTab\",\n    \"modified\": \"20230508110327555\"\n},\n\n\"$:/plugins/Telumire/Commons/macros/openControlPanelTab\": {\n    \"created\": \"20230424221125460\",\n    \"text\": \"\\\\define link-to-controlpanel-tab-actions()\\n\\n\u003C$action-setfield $tiddler=\\\"$:/state/tab-1749438307\\\" text=\u003C\u003Cmain-tab>> />\\n\u003C$action-setfield $tiddler=\\\"$:/state/tab--1963855381\\\" text=\u003C\u003Csub-tab>> />\\n\u003C$action-navigate $to=\u003C\u003CnavigateTo>>/>\\n\\n\\\\end\\n\\n\\\\define link-to-controlpanel-tab-separator()\u003C$list filter=\\\"[\u003Cdepth-last>!match[yes]]\\\">\u003C$text text=\u003C\u003C__separator__>>/>\u003C/$list>\\n\\n\\\\define link-to-controlpanel-tab-template(separator) \u003C$tiddler tiddler=\u003C\u003CnavigateTo>> >\u003C$button tag=\\\"a\\\" actions=\u003C\u003Clink-to-controlpanel-tab-actions>> class=\\\"tc-tiddlylink tc-tiddlylink-shadow\\\">\u003C$transclude field=\\\"caption\\\">\u003C$transclude field=\\\"title\\\"/>\u003C/$transclude>\u003C/$button>\u003C/$tiddler>\u003C\u003Clink-to-controlpanel-tab-separator>>\\n\\n\\\\define link-to-controlpanel-tab(caption:\\\"\\\"\\\"\u003Ccode>\u003C$list filter=\\\"$:/ControlPanel [\u003Cmain-tab>] [\u003Csub-tab>]\\\" counter=\\\"depth\\\" variable=\\\"navigateTo\\\">\u003C\u003Clink-to-controlpanel-tab-template \\\" > \\\">>\u003C/$list>\u003C/code>\\\"\\\"\\\",prefix,sub-tab)\\n\u003C$let\\nprefix={{{ [\u003C__prefix__>!is[blank]]:else[{!!title}split[/]first[4]join[/]] }}} \\nsub-tab={{{ [\u003C__sub-tab__>!is[blank]]:else[all[tiddlers+shadows]prefix\u003Cprefix>search:tags[$:/tags/ControlPanel]] }}}\\nmain-tab={{{ [\u003Csub-tab>tags[]prefix[$:/tags/ControlPanel/]trim[$:/tags/]] :map[[$:/tags/ControlPanel]tagging[]search{!!title}] }}}\\ntv-wikilinks=\\\"no\\\"\\n>\u003C\u003C__caption__>>\u003C/$let>\\n\\\\end\",\n    \"tags\": \"$:/tags/Macro\",\n    \"title\": \"$:/plugins/Telumire/Commons/macros/openControlPanelTab\",\n    \"modified\": \"20230508110326908\",\n    \"code-body\": \"yes\"\n},\n\n\"$:/plugins/Telumire/Commons/styles/checkbox\": {\n    \"created\": \"20230415225146171\",\n    \"text\": \".tc-cbx-invisible{\\n\\tcursor:pointer;\\n}\\n \\n.tc-cbx-invisible input{\\n\\tdisplay:none;\\n}\",\n    \"tags\": \"$:/tags/Stylesheet\",\n    \"title\": \"$:/plugins/Telumire/Commons/styles/checkbox\",\n    \"modified\": \"20230508110327470\"\n},\n\n\"$:/plugins/Telumire/Commons/styles/button\": {\n    \"created\": \"20230415224833603\",\n    \"text\": \".tc-tiddler-controls svg{\\n\\tfill: \u003C\u003Ccolour tiddler-controls-foreground>>;\\n}\\n\\n.tc-tiddler-controls .tc-checkbox:hover svg{\\n\\tfill: \u003C\u003Ccolour tiddler-controls-foreground-hover>>;\\n}\\n\\n.tc-btn-invisible.tc-tiddler-controls.show *{\\nopacity:1;\\n}\",\n    \"tags\": \"$:/tags/Stylesheet\",\n    \"title\": \"$:/plugins/Telumire/Commons/styles/button\",\n    \"modified\": \"20230508110327382\"\n},\n\n\"$:/plugins/Telumire/Commons/styles/table\": {\n    \"created\": \"20230415224914406\",\n    \"text\": \".tc-max-width.tc-edit-max-width{\\ndisplay:grid;\\ngrid-template-columns: fit-content(30%) 1fr;\\n}\\n\\n.tc-edit-max-width :is(.tc-edit-tags, select, input, textarea){\\nflex:1;\\n}\\n\\n.tc-max-width.tc-edit-max-width :not(td, td *){\\ndisplay:contents;\\n}\\n\\n.one-column,\\n.one-column.tc-max-width.tc-edit-max-width {\\ngrid-template-columns: 1fr;\\ngap:.5ch;\\n}\\n\\n.one-column  td{\\npadding:0;\\ndisplay:flex;\\nflex-wrap: wrap;\\ngap:1ch;\\n}\\n\\n.one-column  td .tc-editor-toolbar{\\ndisplay:none;\\n}\\n\\n.one-column :is(input,textarea,iframe){\\nflex:1;\\n}\\n\\n.two-equal-column{\\ndisplay:grid;\\ngrid-template-columns: 1fr 1fr;\\n}\\n\\n.two-equal-column :is(tr,thead,tbody){\\ndisplay:contents;\\n}\\n\\n.tc-max-width.tc-edit-max-width td+td,\\n.two-equal-column.flex-input td+td{\\ndisplay:flex;\\nflex-wrap: wrap;\\ngap:.5ch;\\n}\\n\\n.no-borders, .no-borders td{\\nborder:none;\\n}\",\n    \"tags\": \"$:/tags/Stylesheet\",\n    \"title\": \"$:/plugins/Telumire/Commons/styles/table\",\n    \"modified\": \"20230509003151032\",\n    \"type\": \"\",\n    \"list-after\": \"\"\n},\n\n\"$:/config/PageControlButtons/Visibility/$:/plugins/commons/file-uploads/Buttons/toggle-uploads\": {\n    \"created\": \"20230415224436108\",\n    \"text\": \"hide\",\n    \"title\": \"$:/config/PageControlButtons/Visibility/$:/plugins/commons/file-uploads/Buttons/toggle-uploads\",\n    \"modified\": \"20230415224436108\"\n},\n\n\"$:/config/fileUploads/uploadsEnabled\": {\n    \"created\": \"20230415224347835\",\n    \"text\": \"no\",\n    \"title\": \"$:/config/fileUploads/uploadsEnabled\",\n    \"modified\": \"20230419044320732\"\n},\n\n\"$:/config/file-uploads/github/uploadpath\": {\n    \"created\": \"20230416232346912\",\n    \"text\": \"rss\",\n    \"title\": \"$:/config/file-uploads/github/uploadpath\",\n    \"modified\": \"20230509015442435\",\n    \"disabled-text\": \"rss\",\n    \"original-text\": \"\"\n},\n\n\"$:/config/fileUploader\": {\n    \"created\": \"20221206164626326\",\n    \"title\": \"$:/config/fileUploader\",\n    \"text\": \"github\",\n    \"modified\": \"20221206164626326\"\n},\n\n\"$:/Editor/Macro\": {\n    \"created\": \"20220926201711935\",\n    \"text\": \"\\\\define editor(field:\\\"text\\\",placeholder:\\\"\u003C\u003C__field__>>\\\",tiddler)\\n\\\\define editor-buttons(filter,style)\\n\u003Cdiv style=\u003C\u003C__style__>> class=\\\"editor-buttons\\\">\\n\u003C$list filter=\\\"\\n[[$:/tags/EditorToolbar]tagging[]!is[draft]]\\n:filter[\u003Cconfig-visibility-title>get[text]else[]!match[hide]]\\n:filter[$filter$]\\\">\\n\u003Cdiv style=\\\"position:absolute;top:0;left:0;visibility:hidden\\\">\u003C$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/toolbar/button\\\"/>\u003C/div>\\n\u003C/$list>\\n\u003C/div>\\n\\\\end editor-buttons\\n\u003C$tiddler tiddler={{{ [\u003C__tiddler__>!is[blank]else\u003CcurrentTiddler>] }}}>\\n@@position:relative;\\n\u003C$edit\\nclass=\\\"tc-edit-texteditor tc-edit-texteditor-body\\\"\\ntabindex={{$:/config/EditTabIndex}}\\nfocus={{{ [{$:/config/AutoFocus}match[text]then[yes]] }}}\\ncancelPopups=\\\"yes\\\"\\nfield=\u003C\u003C__field__>>\\n>\\n\u003C\u003Ceditor-buttons \\\"has[dropdown]\\\" \\\"position:absolute;left:0;top:0;\\\">> \u003C\u003Ceditor-buttons \\\"!has[dropdown]\\\" \\\"display:none\\\">>\\n\u003C/$edit>\u003Cstyle>.editor-buttons .tc-drop-down.tc-popup-keep{visibility:initial}\u003C/style>\\n@@\\n\u003C/$tiddler>\\n\\\\end editor\",\n    \"creator\": \"Telumire\",\n    \"tags\": \"$:/tags/Macro Sources Description\",\n    \"title\": \"$:/Editor/Macro\",\n    \"modified\": \"20230430072654778\",\n    \"modifier\": \"Telumire\",\n    \"code-body\": \"yes\"\n},\n\n\"$:/showInfo/macro/copy-code/style\": {\n    \"title\": \"$:/showInfo/macro/copy-code/style\",\n    \"comment\": \"\u003C\u003Ccopy-code html \\\"\\\"\\\"test\\\"\\\"\\\" \\\"title\\\">>\",\n    \"created\": \"20210527214847395\",\n    \"creator\": \"user\",\n    \"modified\": \"20211115014106263\",\n    \"modifier\": \"user\",\n    \"tags\": \"$:/showInfo/macro/copy-code $:/tags/Stylesheet\",\n    \"type\": \"text/vnd.tiddlywiki\",\n    \"text\": \".copy-code{\\n    font-family: Consolas;\\n}\\n\\n.copy-code dt{\\n    background: \u003C\u003Ccolor pre-background>>;\\n    border: solid 1px \u003C\u003Ccolor pre-border>>;\\n    border-bottom:unset;\\n    padding: 0.5em;\\n    border-radius: 3px 3px 0 0;\\n    font-size: 1.1em;\\n}\\n\\n.copy-code dt:empty, .copy-code dd small.hide{\\n    display: none;\\n}\\n\\n.copy-code dd{\\n    margin: 0;\\n}\\n\\n.copy-code dd>pre{\\n    border-radius: 3px;\\n    background-color:\u003C\u003Ccolor tiddler-editor-background>>\\n}\\n\\n.copy-code dt:not(:empty)+dd>pre{\\n    border-radius: 0 0 3px 3px;\\n    margin-top: 0em;\\n}\\n\\n.copy-code dd{\\n    position: relative;\\n    display: block;\\n}\\n\\n.copy-code dd :is(button, small) {\\n    position: absolute;\\n    opacity: 0.3;\\n    padding: 5px;\\n}\\n\\n.copy-code dd button:hover{\\n    transition: opacity 150ms ease-in-out;\\n    opacity: 1;\\n}\\n\\n.copy-code dd button {\\n    font-size: 0;\\n    right:0;\\n    display: flex;\\n    align-items:flex-start;\\n    justify-content:flex-end;\\n    pointer-events:none;\\n}\\n\\n.copy-code dd button svg {\\n    width: 20px;\\n    height: auto;\\n    pointer-events:all;\\n}\\n\\n.copy-code dd small {\\n    inset: auto 0 0 auto;\\n    text-transform: uppercase;\\n    font-weight: bold;\\n    font-size: 1em;\\n}\",\n    \"revision\": \"0\",\n    \"bag\": \"default\"\n},\n\n\"$:/showInfo/macro/copy-code\": {\n    \"created\": \"20210527202956234\",\n    \"text\": \"\\\\define copy-code(language:\\\"\\\" code:\\\"\\\" title:\\\"\\\" display-language:\\\"\\\")\\n\u003Cdl class=\\\"copy-code\\\">\\n\\t\u003Cdt>\u003C\u003C__title__>>\u003C/dt>\\n\\t\u003Cdd>\\n\\t\\t\u003C$macrocall $name=\\\"copy-to-clipboard\\\" src=\u003C\u003C__code__>>/> \\n\\t\\t\u003C$codeblock code=\u003C\u003C__code__>> language=\u003C\u003C__language__>>/>\\n\\t\\t\u003Csmall class={{{ [\u003C__display-language__>!is[blank]]:else[\u003C__code__>split[\\n]count[]compare:number:gt[2]then[show]else[hide]]}}}>\u003C\u003C__language__>>\u003C/small>\\n\\t\u003C/dd>\\n\u003C/dl>\\n\\\\end\",\n    \"creator\": \"user\",\n    \"title\": \"$:/showInfo/macro/copy-code\",\n    \"list\": \"\",\n    \"modified\": \"20230106040245395\",\n    \"modifier\": \"Telumire\",\n    \"tagging\": \"after\",\n    \"tags\": \"$:/showInfo $:/tags/Macro $:/showInfo/macro/copy-code Tools\",\n    \"type\": \"text/vnd.tiddlywiki\",\n    \"revision\": \"0\",\n    \"bag\": \"default\",\n    \"install\": \"\u003C\u003Cexport \\\"[is[current]] [is[current]tagging[]]\\\" filename:\\\"copy-code-macro\\\" hint:\\\"Click or drag and drop this button into your wiki: \\\">>\",\n    \"caption\": \"Copy code macro\",\n    \"description\": \"A macro to show a codeblock + a copy button. Support syntax highlighting with the highlight.js plugin.\\n\\n\u003Cp>Require \u003C\u003Clist-links \\\"[is[current]] [is[current]tagging[]]\\\">>\u003C/p>\"\n},\n\n\"$:/plugins/commons/file-uploads-github\": {\n    \"title\": \"$:/plugins/commons/file-uploads-github\",\n    \"description\": \"Github uploader for uploading binary files to external storage\",\n    \"name\": \"File Uploads: Github\",\n    \"author\": \"Saq Imtiaz\",\n    \"core-version\": \">=5.1.23\",\n    \"list\": \"readme settings license\",\n    \"parent-plugin\": \"$:/plugins/commons/file-uploads\",\n    \"version\": \"0.1.2\",\n    \"plugin-type\": \"plugin\",\n    \"dependents\": \"\",\n    \"type\": \"application/json\",\n    \"text\": \"{\\n    \\\"tiddlers\\\": {\\n        \\\"$:/config/file-uploads/github/uploadpath\\\": {\\n            \\\"title\\\": \\\"$:/config/file-uploads/github/uploadpath\\\",\\n            \\\"text\\\": \\\"files\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads-github/uploader.js\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads-github/uploader.js\\\",\\n            \\\"text\\\": \\\"/*\\\\\\\\\\\\ntitle: $:/plugins/commons/file-uploads-github/uploader.js\\\\ntype: application/javascript\\\\nmodule-type: uploader\\\\n\\\\nHandles uploading files to Github\\\\nUses the username, repository and access token from the Github saver\\\\nFiles are saved to the \\\\\\\"files\\\\\\\" directory in the root of repository, existing files are overwritten.\\\\n\\\\n\\\\\\\\*/\\\\n(function(){\\\\n\\\\n\\\\n/*jslint node: true, browser: true */\\\\n/*global $tw: false */\\\\n\\\\\\\"use strict\\\\\\\";\\\\n\\\\nexports.name = \\\\\\\"github\\\\\\\";\\\\n\\\\n'use strict';\\\\n\\\\nvar Octokat = require(\\\\\\\"$:/plugins/commons/file-uploads-github/octokat.js\\\\\\\");\\\\n\\\\nvar defaults = {\\\\n\\\\tbranchName: 'main',\\\\n\\\\ttoken: '',\\\\n\\\\tusername: '',\\\\n\\\\treponame: ''\\\\n};\\\\n\\\\n//Adapted from https://gist.github.com/StephanHoyer/91d8175507fcae8fb31a\\\\nfunction github(options) {\\\\n\\\\toptions = Object.assign({}, defaults, options);\\\\n\\\\tvar head;\\\\n\\\\n\\\\tvar octo = new Octokat({\\\\n\\\\t\\\\ttoken: options.token\\\\n\\\\t});\\\\n\\\\tvar repo = octo.repos(options.username, options.reponame);\\\\n\\\\n\\\\tfunction fetchHead() {\\\\n\\\\t\\\\treturn repo.git.refs.heads(options.branchName).fetch();\\\\n\\\\t}\\\\n\\\\n\\\\tfunction fetchTree() {\\\\n\\\\t\\\\treturn fetchHead().then(function(commit) {\\\\n\\\\t\\\\t\\\\thead = commit;\\\\n\\\\t\\\\t\\\\treturn repo.git.trees(commit.object.sha).fetch();\\\\n\\\\t\\\\t});\\\\n\\\\t}\\\\n\\\\n\\\\tfunction commit(files, message) {\\\\n\\\\t\\\\treturn Promise.all(files.map(function(file) {\\\\n\\\\t\\\\t\\\\treturn repo.git.blobs.create({\\\\n\\\\t\\\\t\\\\tcontent: file.content,\\\\n\\\\t\\\\t\\\\tencoding: file.encoding || 'utf-8'\\\\n\\\\t\\\\t\\\\t});\\\\n\\\\t\\\\t})).then(function(blobs) {\\\\n\\\\t\\\\t\\\\treturn fetchTree().then(function(tree) {\\\\n\\\\t\\\\t\\\\treturn repo.git.trees.create({\\\\n\\\\t\\\\t\\\\t\\\\ttree: files.map(function(file, index) {\\\\n\\\\t\\\\t\\\\t\\\\treturn {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tpath: file.path,\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tmode: '100644',\\\\n\\\\t\\\\t\\\\t\\\\t\\\\ttype: 'blob',\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tsha: blobs[index].sha\\\\n\\\\t\\\\t\\\\t\\\\t};\\\\n\\\\t\\\\t\\\\t\\\\t}),\\\\n\\\\t\\\\t\\\\t\\\\tbase_tree: tree.sha\\\\n\\\\t\\\\t\\\\t});\\\\n\\\\t\\\\t\\\\t});\\\\n\\\\t\\\\t}).then(function(tree) {\\\\n\\\\t\\\\t\\\\treturn repo.git.commits.create({\\\\n\\\\t\\\\t\\\\tmessage: message,\\\\n\\\\t\\\\t\\\\ttree: tree.sha,\\\\n\\\\t\\\\t\\\\tparents: [\\\\n\\\\t\\\\t\\\\t\\\\thead.object.sha\\\\n\\\\t\\\\t\\\\t]\\\\n\\\\t\\\\t\\\\t});\\\\n\\\\t\\\\t}).then(function(commit) {\\\\n\\\\t\\\\t\\\\treturn repo.git.refs.heads(options.branchName).update({\\\\n\\\\t\\\\t\\\\tsha: commit.sha\\\\n\\\\t\\\\t\\\\t});\\\\n\\\\t\\\\t});\\\\n\\\\t}\\\\n\\\\n\\\\treturn {\\\\n\\\\tcommit: commit\\\\n\\\\t};\\\\n}\\\\n\\\\nexports.create = function(params) {\\\\n\\\\tvar reponame = $tw.wiki.getTiddlerText(\\\\\\\"$:/GitHub/Repo\\\\\\\"),\\\\n\\\\t\\\\tusername = $tw.wiki.getTiddlerText(\\\\\\\"$:/GitHub/Username\\\\\\\"),\\\\n\\\\t\\\\ttoken = $tw.utils.getPassword(\\\\\\\"github\\\\\\\");\\\\n\\\\tif(!username || !reponame || !token) {\\\\n\\\\t\\\\tparams.logger.alert(\\\\\\\"Github repository details are not properly configured. Cannot upload files.\\\\\\\");\\\\n\\\\t\\\\treturn null;\\\\n\\\\t}\\\\n\\\\tvar githubInfo = {\\\\n\\\\t\\\\tusername: username.trim(),\\\\n\\\\t\\\\treponame: reponame.trim().split(\\\\\\\"/\\\\\\\").pop(),\\\\n\\\\t\\\\ttoken: token.trim()\\\\n\\\\t}\\\\n\\\\treturn new GithubUploader(params,githubInfo);\\\\n};\\\\n\\\\nfunction GithubUploader(params,githubInfo) {\\\\n\\\\tthis.params = params || {};\\\\n\\\\tthis.githubInfo = githubInfo;\\\\n\\\\tthis.logger = new $tw.utils.Logger(\\\\\\\"github-uploader\\\\\\\");\\\\n\\\\tthis.files = [];\\\\n\\\\tthis.logger.log(\\\\\\\"GithubUploader\\\\\\\",params);\\\\n};\\\\n\\\\nGithubUploader.prototype.initialize = function(callback) {\\\\n\\\\tthis.logger.log(\\\\\\\"uploader initialize\\\\\\\");\\\\n\\\\tcallback();\\\\n};\\\\n\\\\n// Returns the canonical_uri for a file that has been uploaded\\\\nGithubUploader.prototype._getCanonicalURI = function(uploadItem) {\\\\n\\\\treturn `https://${this.githubInfo.username}.github.io/${this.githubInfo.reponame}/${this._getFilePath()}/${uploadItem.filename}`;\\\\n};\\\\n\\\\nGithubUploader.prototype._getFilePath = function() {\\\\n\\\\treturn $tw.wiki.getTiddlerText(\\\\\\\"$:/config/file-uploads/github/uploadpath\\\\\\\",\\\\\\\"files\\\\\\\").trim().replace(/^\\\\\\\\/|\\\\\\\\/$/gm,\\\\\\\"\\\\\\\");\\\\n};\\\\n\\\\n/*\\\\nArguments:\\\\nuploadItem: object of type UploadItem representing tiddler to be uploaded\\\\ncallback accepts two arguments:\\\\n\\\\terr: error object if there was an error\\\\n\\\\tuploadItemInfo: object corresponding to the tiddler being uploaded with the following properties set:\\\\n\\\\t- title\\\\n\\\\t- canonical_uri (if available)\\\\n\\\\t- fields (optional)\\\\n\\\\t- uploadComplete (boolean)\\\\n\\\\t- getUint8Array()\\\\n\\\\t- getBlob()\\\\n*/\\\\nGithubUploader.prototype.uploadFile = function(uploadItem,callback) {  \\\\n\\\\tvar self = this,\\\\n\\\\t\\\\tuploadInfo = { title: uploadItem.title };\\\\n\\\\tthis.files.push({\\\\n\\\\t\\\\tpath: `${this._getFilePath()}/${uploadItem.filename}`,\\\\n\\\\t\\\\tcontent: uploadItem.text,\\\\n\\\\t\\\\tencoding: uploadItem.isBase64 ? \\\\\\\"base64\\\\\\\" : \\\\\\\"utf8\\\\\\\"\\\\n\\\\t});\\\\t\\\\t\\\\n\\\\tvar canonical_uri = this._getCanonicalURI(uploadItem);\\\\n\\\\t// Set the canonical_uri if available \\\\n\\\\tuploadInfo.canonical_uri = canonical_uri;\\\\n\\\\t// Set uploadComplete to true if the uploaded file has been persisted and is available at the canonical_uri\\\\n\\\\t// This flag triggers the creation of a canonical_uri tiddler corresponding to the uploaded file\\\\n\\\\tuploadInfo.uploadComplete = false;\\\\n\\\\tcallback(null,uploadInfo);\\\\n};\\\\n\\\\n/*\\\\nArguments:\\\\ncallback accepts two arguments:\\\\n\\\\terr: error object if there was an error\\\\n\\\\tuploadInfoArray (optional): array of uploadInfo objects corresponding to the tiddlers that have been uploaded\\\\n\\\\t\\\\tthis is needed and should set the canonical_uri for each uploadItem if:\\\\n\\\\t\\\\t- (a) uploadInfo.uploadComplete was not set to true in uploadFile AND \\\\n\\\\t\\\\t- (b) uploadInfo.canonical_uri was not set in uploadFile\\\\n*/\\\\nGithubUploader.prototype.deinitialize = function(callback) {\\\\n\\\\tvar self = this;\\\\n\\\\tthis.logger.log(\\\\\\\"uploader deinitialize\\\\\\\",this.files);\\\\n\\\\tvar api = github(this.githubInfo);\\\\n\\\\tapi.commit(this.files,\\\\\\\"Uploaded by TiddlyWiki\\\\\\\")\\\\n\\\\t\\\\t.then(() => callback())\\\\n\\\\t\\\\t.catch((err) => {\\\\n\\\\t\\\\t\\\\tself.logger.alert(`Error uploading to github: ${err} in uploader deinitialize`);\\\\n\\\\t\\\\t\\\\tcallback(err);\\\\n\\\\t\\\\t});\\\\n};\\\\n\\\\n})();\\\\n\\\",\\n            \\\"type\\\": \\\"application/javascript\\\",\\n            \\\"module-type\\\": \\\"uploader\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads-github/license\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads-github/license\\\",\\n            \\\"text\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\n~OctoKat, copyright (c) by Philip Schatz\\\\nDistributed under an MIT license: https://github.com/philschatz/octokat.js/blob/master/LICENSE.md\\\\n\\\\nCopyright (c) 2004-2007, Jeremy Ruston\\\\nCopyright (c) 2007-2021, ~UnaMesa Association\\\\nDistributed under an BSD license: https://tiddlywiki.com/#License\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads-github/octokat.js\\\": {\\n            \\\"text\\\": \\\"!function(e,t){\\\\\\\"object\\\\\\\"==typeof exports&&\\\\\\\"object\\\\\\\"==typeof module?module.exports=t():\\\\\\\"function\\\\\\\"==typeof define&&define.amd?define([],t):\\\\\\\"object\\\\\\\"==typeof exports?exports.Octokat=t():e.Octokat=t()}(\\\\\\\"undefined\\\\\\\"!=typeof self?self:this,function(){return s={},r.m=n=[function(e,t,n){\\\\\\\"use strict\\\\\\\";n={camelize:function(e){return e?e.replace(/[_-]+(\\\\\\\\w)/g,function(e){return e[1].toUpperCase()}):\\\\\\\"\\\\\\\"},uncamelize:function(e){return e?e.replace(/([A-Z])+/g,function(e){return\\\\\\\"_\\\\\\\"+(1\u003Carguments.length&&void 0!==arguments[1]?arguments[1]:\\\\\\\"\\\\\\\").toLowerCase()}):\\\\\\\"\\\\\\\"},dasherize:function(e){return e?(e=e[0].toLowerCase()+e.slice(1)).replace(/([A-Z])|(_)/g,function(e,t){return t?\\\\\\\"-\\\\\\\"+t.toLowerCase():\\\\\\\"-\\\\\\\"}):\\\\\\\"\\\\\\\"},extend:function(t,n){if(n)return Object.keys(n).map(function(e){t[e]=n[e]})},forOwn:function(t,n){return Object.keys(t).map(function(e){return n(t[e],e)})},filter:n(12),forEach:n(13),map:n(14)};e.exports=n},function(e,t,n){\\\\\\\"use strict\\\\\\\";e.exports=function(e){console&&console.warn&&console.warn(\\\\\\\"Octokat Deprecation: \\\\\\\"+e)}},function(e,t,n){\\\\\\\"use strict\\\\\\\";e.exports=function(e,t){if(!e||e==={})return\\\\\\\"\\\\\\\";var n,r=[],s=e||{};for(n in s){var o=s[n];o&&r.push(n+\\\\\\\"=\\\\\\\"+encodeURIComponent(o))}return r.length?t?\\\\\\\"&\\\\\\\"+r.join(\\\\\\\"&\\\\\\\"):\\\\\\\"?\\\\\\\"+r.join(\\\\\\\"&\\\\\\\"):\\\\\\\"\\\\\\\"}},function(e,t,n){\\\\\\\"use strict\\\\\\\";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s={readme:!1,tarball:!1,zipball:!1,compare:!1,deployments:{statuses:!1},hooks:{tests:!1},assignees:!1,languages:!1,teams:!1,tags:!1,branches:!1,contributors:!1,subscribers:!1,subscription:!1,stargazers:!1,comments:!1,downloads:!1,forks:!1,milestones:{labels:!1},labels:!1,releases:{assets:!1,latest:!1,tags:!1},events:!1,notifications:!1,merges:!1,statuses:!1,pulls:{merge:!1,comments:!1,commits:!1,files:!1,events:!1,labels:!1,requested_reviewers:!1,reviews:{comments:!1,events:!1,dismissals:!1}},pages:{builds:{latest:!1}},commits:{comments:!1,status:!1,statuses:!1},contents:!1,collaborators:{permission:!1},projects:!1,issues:{events:!1,comments:!1,labels:!1},git:{refs:{heads:!1,tags:!1},trees:!1,blobs:!1,commits:!1},stats:{contributors:!1,commit_activity:!1,code_frequency:!1,participation:!1,punch_card:!1},traffic:{popular:{referrers:!1,paths:!1},views:!1,clones:!1}};e.exports=(r(e={zen:!1,octocat:!1,organizations:!1,issues:!1,emojis:!1,markdown:!1,meta:!1,rate_limit:!1,feeds:!1,events:!1,repositories:!1,notifications:{threads:{subscription:!1}},gitignore:{templates:!1},user:{repos:!1,orgs:!1,followers:!1,following:!1,emails:!1,issues:!1,public_emails:!1,starred:!1,teams:!1},orgs:{repos:!1,issues:!1,members:!1,events:!1,projects:!1,teams:!1},projects:{columns:{moves:!1,cards:{moves:!1}}},teams:{members:!1,memberships:!1,repos:!1},users:{repos:!1,orgs:!1,gists:!1,followers:!1,following:!1,keys:!1,starred:!1,received_events:{public:!1},events:{public:!1,orgs:!1},site_admin:!1,suspended:!1},search:{repositories:!1,commits:!1,issues:!1,users:!1,code:!1},gists:{public:!1,starred:!1,star:!1,comments:!1,forks:!1},repos:s},\\\\\\\"repositories\\\\\\\",s),r(e,\\\\\\\"licenses\\\\\\\",!1),r(e,\\\\\\\"authorizations\\\\\\\",{clients:!1}),r(e,\\\\\\\"applications\\\\\\\",{tokens:!1}),r(e,\\\\\\\"enterprise\\\\\\\",{settings:{license:!1},stats:{issues:!1,hooks:!1,milestones:!1,orgs:!1,comments:!1,pages:!1,users:!1,gists:!1,pulls:!1,repos:!1,all:!1}}),r(e,\\\\\\\"staff\\\\\\\",{indexing_jobs:!1}),r(e,\\\\\\\"setup\\\\\\\",{api:{start:!1,upgrade:!1,configcheck:!1,configure:!1,settings:{\\\\\\\"authorized-keys\\\\\\\":!1},maintenance:!1}}),e)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=\\\\\\\"function\\\\\\\"==typeof Symbol&&\\\\\\\"symbol\\\\\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\\\\\"function\\\\\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\\\\\"symbol\\\\\\\":typeof e},s=function(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e};function o(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=n(0);function i(e){!function(e){if(!(e instanceof i))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this),this._verbMethods=e}e.exports=(s(i,[{key:\\\\\\\"chain\\\\\\\",value:function(s,o,i,t){var a=this;if(null==t&&(t=function(){for(var e=arguments.length,t=Array(e),n=0;n\u003Ce;n++)t[n]=arguments[n];if(!t.length)throw new Error(\\\\\\\"BUG! must be called with at least one argument\\\\\\\");var r=\\\\\\\"compare\\\\\\\"===o?\\\\\\\"...\\\\\\\":\\\\\\\"/\\\\\\\";return a.chain(s+\\\\\\\"/\\\\\\\"+t.join(r),o,i)}),this._verbMethods.injectVerbMethods(s,t),\\\\\\\"function\\\\\\\"==typeof t||\\\\\\\"object\\\\\\\"===(void 0===t?\\\\\\\"undefined\\\\\\\":r(t)))for(o in i||{})!function(e){delete t[u.camelize(e)],Object.defineProperty(t,u.camelize(e),{configurable:!0,enumerable:!0,get:function(){return a.chain(s+\\\\\\\"/\\\\\\\"+e,e,i[e])}})}(o);return t}}]),i)},function(e,t,n){\\\\\\\"use strict\\\\\\\";Object.defineProperty(t,\\\\\\\"__esModule\\\\\\\",{value:!0});var r=\\\\\\\"function\\\\\\\"==typeof Symbol&&\\\\\\\"symbol\\\\\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\\\\\"function\\\\\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\\\\\"symbol\\\\\\\":typeof e},s=function(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e};function o(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(s){return function(){for(var e=arguments.length,t=Array(e),n=0;n\u003Ce;n++)t[n]=arguments[n];var r=t[t.length-1];if(\\\\\\\"function\\\\\\\"==typeof r)return t.pop(),s.apply(void 0,t).then(function(e){r(null,e)}).catch(function(e){r(e)});if(\\\\\\\"undefined\\\\\\\"!=typeof Promise)return s.apply(void 0,t);throw new Error(\\\\\\\"You must specify a callback or have a promise library loaded\\\\\\\")}}var n=n(0),u=n.filter,a=n.forOwn,c=n.extend,s=(s(l,[{key:\\\\\\\"injectVerbMethods\\\\\\\",value:function(u,n){var c=this;return\\\\\\\"object\\\\\\\"!==(void 0===n?\\\\\\\"undefined\\\\\\\":r(n))&&\\\\\\\"function\\\\\\\"!=typeof n||(n.url=u,a(this._syncVerbs,function(a,e){n[e]=function(){return i(function(){for(var e=arguments.length,t=Array(e),n=0;n\u003Ce;n++)t[n]=arguments[n];var r,s,o=a.apply(void 0,[u].concat(t)),i=o.method;return u=o.path,r=o.data,s=o.options,c._requester.request(i,u,r,s)}).apply(void 0,arguments)}}),a(this._asyncVerbs,function(t,e){n[e]=function(){var e=t(c._requester,u);return i(e).apply(void 0,arguments)}})),n}}]),l);function l(e,t){if(!function(e){if(!(e instanceof l))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this),this._requester=t,!this._requester)throw new Error(\\\\\\\"Octokat BUG: request is required\\\\\\\");t=u(e,function(e){return e.promiseCreator});t&&(this._promisePlugin=t[0]),this._syncVerbs={};for(var n=u(e,function(e){return e.verbs}),r=0;r\u003Cn.length;r++){var s=n[r];c(this._syncVerbs,s.verbs)}this._asyncVerbs={};for(var o=u(e,function(e){return e.asyncVerbs}),i=0;i\u003Co.length;i++){var a=o[i];c(this._asyncVerbs,a.asyncVerbs)}}t.VerbMethods=s,t.toPromise=i},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=n(2);e.exports={verbs:{fetch:function(e,t){return{method:\\\\\\\"GET\\\\\\\",path:\\\\\\\"\\\\\\\"+e+r(t)}},read:function(e,t){return{method:\\\\\\\"GET\\\\\\\",path:\\\\\\\"\\\\\\\"+e+r(t),options:{isRaw:!0}}},remove:function(e,t){return{method:\\\\\\\"DELETE\\\\\\\",path:e,data:t,options:{isBoolean:!0}}},create:function(e,t,n){return n?{method:\\\\\\\"POST\\\\\\\",path:e,data:t,options:{isRaw:!0,contentType:n}}:{method:\\\\\\\"POST\\\\\\\",path:e,data:t}},update:function(e,t){return{method:\\\\\\\"PATCH\\\\\\\",path:e,data:t}},add:function(e,t){return{method:\\\\\\\"PUT\\\\\\\",path:e,data:t,options:{isBoolean:!0}}},contains:function(e){for(var t=arguments.length,n=Array(1\u003Ct?t-1:0),r=1;r\u003Ct;r++)n[r-1]=arguments[r];return{method:\\\\\\\"GET\\\\\\\",path:e+\\\\\\\"/\\\\\\\"+n.join(\\\\\\\"/\\\\\\\"),options:{isBoolean:!0}}}}}},function(e,t,n){e.exports=n(8)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=n(1),s=n(9),o=n(17),i=[n(18),n(20),n(22),n(24),n(26),n(6),n(27),n(28),n(29),n(30),o,n(31)],n=function e(){var t=0\u003Carguments.length&&void 0!==arguments[0]?arguments[0]:{};return null==t.plugins&&(t.plugins=i),t.disableHypermedia&&(r(\\\\\\\"Please use the clientOptions.plugins array and just do not include the hypermedia plugin\\\\\\\"),t.plugins=t.plugins.filter(function(e){return e!==o})),e.Fetch&&(s.Fetch=e.Fetch),new s(t)};e.exports=n},function(t,e,i){\\\\\\\"use strict\\\\\\\";(function(p){function h(e){if(Array.isArray(e))return e.map(h);if(e!==Object(e))return e;for(var t={},n=Object.keys(e),r=0;r\u003Cn.length;r++){var s=n[r],o=e[s];t[d.uncamelize(s)]=h(o)}return t}var n=i(11),d=i(0),o=i(1),r=i(3),s=i(4),e=i(5),m=e.VerbMethods,v=e.toPromise,y=i(6),g=i(15),b=i(16),e=function e(){var i=0\u003Carguments.length&&void 0!==arguments[0]?arguments[0]:{},a=i.plugins||[y],u=i.disableHypermedia;null==u&&(u=!1);function t(e,t,n){var r,s=3\u003Carguments.length&&void 0!==arguments[3]?arguments[3]:{raw:!1,isBase64:!1,isBoolean:!1};n&&(r=n,void 0===p.Buffer||!p.Buffer.isBuffer(r))&&(n=h(n));var o=new g(c,i,a,l);return o.request(e,t,n,s).then(function(e){if((s||{}).raw)return e;if(u)return e;e={data:e,plugins:a,requester:o,instance:c,clientOptions:i};return c._parseWithContextPromise(t,e)})}var c={},l=e.Fetch||n,f=new m(a,{request:t});return new s(f).chain(\\\\\\\"\\\\\\\",null,r,c),c.me=c.user,c.parse=function(e){e={requester:{request:t},plugins:a,data:e,instance:c,clientOptions:i};return c._parseWithContextPromise(\\\\\\\"\\\\\\\",e)},c.parse=v(c.parse),c._parseWithContextPromise=function(e,t){var n=t.data;n&&(t.url=n.url||e);var e=d.map(d.filter(a,function(e){return e.responseMiddlewareAsync}),function(e){return e.responseMiddlewareAsync.bind(e)}),r=Promise.resolve(t);return e.forEach(function(e){r=r.then(e)}),r.then(function(e){return e.data})},c._fromUrlWithDefault=function(e,t){for(var n=arguments.length,r=Array(2\u003Cn?n-2:0),s=2;s\u003Cn;s++)r[s-2]=arguments[s];return e=b.apply(void 0,[e].concat(r)),f.injectVerbMethods(e,t),t},c.fromUrl=function(e){for(var t=arguments.length,n=Array(1\u003Ct?t-1:0),r=1;r\u003Ct;r++)n[r-1]=arguments[r];function s(){return o(\\\\\\\"call ....fetch() explicitly instead of ...()\\\\\\\"),s.fetch.apply(s,arguments)}return c._fromUrlWithDefault.apply(c,[e,s].concat(n))},c._fromUrlCurried=function(r,s){function o(){for(var e=arguments.length,t=Array(e),n=0;n\u003Ce;n++)t[n]=arguments[n];return s&&0===t.length?s.apply(o):c.fromUrl.apply(c,[r].concat(t))}return/\\\\\\\\{/.test(r)||f.injectVerbMethods(r,o),o},c.status=c.fromUrl(\\\\\\\"https://status.github.com/api/status.json\\\\\\\"),c.status.api=c.fromUrl(\\\\\\\"https://status.github.com/api.json\\\\\\\"),c.status.lastMessage=c.fromUrl(\\\\\\\"https://status.github.com/api/last-message.json\\\\\\\"),c.status.messages=c.fromUrl(\\\\\\\"https://status.github.com/api/messages.json\\\\\\\"),c};t.exports=e}).call(e,i(10))},function(e,t){var n=function(){return this}();try{n=n||Function(\\\\\\\"return this\\\\\\\")()||(0,eval)(\\\\\\\"this\\\\\\\")}catch(e){\\\\\\\"object\\\\\\\"==typeof window&&(n=window)}e.exports=n},function(e,t,n){\\\\\\\"use strict\\\\\\\";\\\\\\\"function\\\\\\\"==typeof window.fetch?e.exports=window.fetch.bind(window):e.exports=function(){throw new Error(\\\\\\\"Octokat Error: window.fetch function not found. Either use the https://npmjs.com/package/whatwg-fetch polyfill or set Octokat.Fetch variable to be the fetch function\\\\\\\")}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,s=0,o=[];++n\u003Cr;){var i=e[n];t(i,n,e)&&(o[s++]=i)}return o}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n\u003Cr&&!1!==t(e[n],n,e););return e}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,s=Array(r);++n\u003Cr;)s[n]=t(e[n],n,e);return s}},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=n(0),o=n.filter,i=n.map,f=0;function a(e){var t=1\u003Carguments.length&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2],r=arguments[3];!function(e){if(!(e instanceof a))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this),this._instance=e,this._clientOptions=t,null==this._clientOptions.rootURL&&(this._clientOptions.rootURL=\\\\\\\"https://api.github.com\\\\\\\"),null==this._clientOptions.useETags&&(this._clientOptions.useETags=!0),null==this._clientOptions.usePostInsteadOfPatch&&(this._clientOptions.usePostInsteadOfPatch=!1),null==this._clientOptions.userAgent&&(\\\\\\\"undefined\\\\\\\"!=typeof window&&null!==window||(this._clientOptions.userAgent=\\\\\\\"octokat.js\\\\\\\")),\\\\\\\"function\\\\\\\"==typeof this._clientOptions.emitter&&(this._emit=this._clientOptions.emitter),this._pluginMiddlewareAsync=i(o(n,function(e){return e.requestMiddlewareAsync}),function(e){return e.requestMiddlewareAsync.bind(e)}),this._plugins=n,this._fetchImpl=r}e.exports=(r(a,[{key:\\\\\\\"request\\\\\\\",value:function(i,a,u){var c=this,l=3\u003Carguments.length&&void 0!==arguments[3]?arguments[3]:{isRaw:!1,isBase64:!1,isBoolean:!1,contentType:\\\\\\\"application/json\\\\\\\"};null==l&&(l={}),null==l.isRaw&&(l.isRaw=!1),null==l.isBase64&&(l.isBase64=!1),null==l.isBoolean&&(l.isBoolean=!1),null==l.contentType&&(l.contentType=\\\\\\\"application/json\\\\\\\"),/^http/.test(a)||(a=\\\\\\\"\\\\\\\"+this._clientOptions.rootURL+a);var n={Accept:this._clientOptions.acceptHeader||\\\\\\\"application/json\\\\\\\"};this._clientOptions.userAgent&&(n[\\\\\\\"User-Agent\\\\\\\"]=this._clientOptions.userAgent);var e={method:i,path:a,headers:n,options:l,clientOptions:this._clientOptions},t=Promise.resolve(e);return this._pluginMiddlewareAsync.forEach(function(e){t=t.then(e)}),t.then(function(r){i=r.method,n=r.headers,l.isRaw&&(n.Accept=\\\\\\\"application/vnd.github.raw\\\\\\\");var e,t,s={method:i,headers:n,body:!l.isRaw&&u&&JSON.stringify(u)||u},o=++f;return e=c._emit,t=function(e){return e(\\\\\\\"start\\\\\\\",o,{method:i,path:a,data:u,options:l})},\\\\\\\"function\\\\\\\"==typeof e&&t(e),c._fetchImpl(a,s).then(function(t){var e,n=t;if(c._emit&&(t.headers.get(\\\\\\\"X-RateLimit-Limit\\\\\\\")&&(e=parseFloat(t.headers.get(\\\\\\\"X-RateLimit-Limit\\\\\\\")),e={remaining:parseFloat(t.headers.get(\\\\\\\"X-RateLimit-Remaining\\\\\\\")),limit:e,reset:parseFloat(t.headers.get(\\\\\\\"X-RateLimit-Reset\\\\\\\"))},t.headers.get(\\\\\\\"X-OAuth-Scopes\\\\\\\")&&(e.scopes=t.headers.get(\\\\\\\"X-OAuth-Scopes\\\\\\\").split(\\\\\\\", \\\\\\\"))),c._emit(\\\\\\\"end\\\\\\\",o,{method:i,path:a,data:u,options:l},t.status,e)),302===t.status)return t.headers.get(\\\\\\\"Location\\\\\\\");if(l.isBoolean&&204===t.status)return!0;if(l.isBoolean&&404===t.status)return!1;if(200\u003C=t.status&&t.status\u003C300||304===t.status||302===t.status||0===t.status)return(304===t.status?Promise.resolve(null):0===(t.headers.get(\\\\\\\"content-type\\\\\\\")||\\\\\\\"\\\\\\\").indexOf(\\\\\\\"application/json\\\\\\\")?t.json():t.text()).then(function(e){return r={clientOptions:c._clientOptions,plugins:c._plugins,data:e,options:l,jqXHR:n,status:t.status,request:r,requester:c,instance:c._instance},c._instance._parseWithContextPromise(\\\\\\\"\\\\\\\",r)});return t.text().then(function(e){return Promise.reject(new Error(e+\\\\\\\" \\\\\\\"+s.method+\\\\\\\" \\\\\\\"+a+\\\\\\\" Status: \\\\\\\"+t.status))})})})}}]),a)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var f=n(2),p=n(1);e.exports=function(e){var t,n;n=0==(arguments.length\u003C=1?0:arguments.length-1)?{}:(1\u003C(arguments.length\u003C=1?0:arguments.length-1)&&p(\\\\\\\"When filling in a template URL pass all the field to fill in 1 object instead of comma-separated args\\\\\\\"),arguments.length\u003C=1?void 0:arguments[1]);for(;t=/(\\\\\\\\{[^\\\\\\\\}]+\\\\\\\\})/.exec(e);){var r=t[1],s=\\\\\\\"\\\\\\\";switch(r[1]){case\\\\\\\"/\\\\\\\":var o=r.slice(2,r.length-1),i=n[o];if(i){if(/\\\\\\\\//.test(i))throw new Error(\\\\\\\"Octokat Error: this field must not contain slashes: \\\\\\\"+o);s=\\\\\\\"/\\\\\\\"+i}break;case\\\\\\\"+\\\\\\\":(i=n[o=r.slice(2,r.length-1)])&&(s=i);break;case\\\\\\\"?\\\\\\\":for(var a=r.slice(2,-1).split(\\\\\\\",\\\\\\\"),u={},c=0;c\u003Ca.length;c++)u[o=a[c]]=n[o];s=f(u);break;case\\\\\\\"&\\\\\\\":a=r.slice(2,-1).split(\\\\\\\",\\\\\\\"),u={};for(var l=0;l\u003Ca.length;l++)u[o=a[l]]=n[o];s=f(u,!0);break;default:if(!n[o=r.slice(1,r.length-1)])throw new Error(\\\\\\\"Octokat Error: Required parameter is missing: \\\\\\\"+o);s=n[o]}e=e.replace(r,s),0}return e}},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=n(1);function o(){!function(e){if(!(e instanceof o))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(r(o,[{key:\\\\\\\"replace\\\\\\\",value:function(e,t){return Array.isArray(t)?this._replaceArray(e,t):\\\\\\\"function\\\\\\\"!=typeof t&&!(t instanceof Date)&&t===Object(t)?this._replaceObject(e,t):t}},{key:\\\\\\\"_replaceObject\\\\\\\",value:function(e,t){for(var n={},r=Object.keys(t),s=0;s\u003Cr.length;s++){var o=r[s],i=t[o];this._replaceKeyValue(e,n,o,i)}return n}},{key:\\\\\\\"_replaceArray\\\\\\\",value:function(t,e){for(var n=this,r=e.map(function(e){return n.replace(t,e)}),s=Object.keys(e),o=0;o\u003Cs.length;o++){var i=s[o],a=e[i];this._replaceKeyValue(t,r,i,a)}return r}},{key:\\\\\\\"_replaceKeyValue\\\\\\\",value:function(r,e,t,s){return/_url$/.test(t)?(n=/^upload_url$/.test(t)?(o=function e(){return i(\\\\\\\"call .upload({name, label}).create(data, contentType) instead of .upload(name, data, contentType)\\\\\\\"),e.create.apply(e,arguments)},function(){for(var e=arguments.length,t=Array(e),n=0;n\u003Ce;n++)t[n]=arguments[n];return r._fromUrlWithDefault.apply(r,[s,o].concat(t))()}):(o=function(){return i(\\\\\\\"instead of directly calling methods like .nextPage(), use .nextPage.fetch()\\\\\\\"),this.fetch()},r._fromUrlCurried(s,o)),e[t.substring(0,t.length-\\\\\\\"_url\\\\\\\".length)]=n,/\\\\\\\\{/.test(s)?void 0:e[t]=s):/_at$/.test(t)?e[t]=s?new Date(s):null:e[t]=this.replace(r,s);var o,n}},{key:\\\\\\\"responseMiddlewareAsync\\\\\\\",value:function(e){var t=e.instance,n=e.data,n=this.replace(t,n);return e.data=n,Promise.resolve(e)}}]),new o)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=n(19),f=n(3),u=n(5).VerbMethods,c=n(4);function o(){!function(e){if(!(e instanceof o))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(r(o,[{key:\\\\\\\"chainChildren\\\\\\\",value:function(a,u,c){return function(){var e,t=[];for(e in l){var n=void 0;if(l[e].test(c.url)){for(var r=f,s=e.split(\\\\\\\".\\\\\\\"),o=0;o\u003Cs.length;o++)var i=s[o],r=r[i];n=a.chain(u,i,r,c)}t.push(n)}return t}()}},{key:\\\\\\\"responseMiddlewareAsync\\\\\\\",value:function(e){var t=e.plugins,n=e.requester,r=e.data,s=e.url,n=new u(t,n),o=new c(n);if(s)o.chain(s,!0,{},r),this.chainChildren(o,s,r);else if(o.chain(\\\\\\\"\\\\\\\",null,{},r),Array.isArray(r))for(var i=0;i\u003Cr.length;i++){var a=r[i];this.chainChildren(o,a.url,a)}return Promise.resolve(e)}}]),new o)},function(e,t,n){\\\\\\\"use strict\\\\\\\";(function(){e.exports={repos:/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/(repos(\\\\\\\\/[^\\\\\\\\/]+){2}|repositories\\\\\\\\/([0-9]+))$/,gists:/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/gists\\\\\\\\/[^\\\\\\\\/]+$/,issues:/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/(repos(\\\\\\\\/[^\\\\\\\\/]+){2}|repositories\\\\\\\\/([0-9]+))\\\\\\\\/(issues|pulls)\\\\\\\\/[^\\\\\\\\/]+$/,users:/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/users\\\\\\\\/[^\\\\\\\\/]+$/,orgs:/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/orgs\\\\\\\\/[^\\\\\\\\/]+$/,teams:/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/teams\\\\\\\\/[^\\\\\\\\/]+$/,\\\\\\\"repos.comments\\\\\\\":/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/repos\\\\\\\\/[^\\\\\\\\/]+\\\\\\\\/[^\\\\\\\\/]+\\\\\\\\/comments\\\\\\\\/[^\\\\\\\\/]+$/}}).call(void 0)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=n(21);function i(){!function(e){if(!(e instanceof i))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(r(i,[{key:\\\\\\\"requestMiddlewareAsync\\\\\\\",value:function(e){var t=e.path;return o.test(t)||(t=\\\\\\\"Octokat BUG: Invalid Path. If this is actually a valid path then please update the URL_VALIDATOR. path=\\\\\\\"+t,console.warn(t)),Promise.resolve(e)}}]),new i)},function(e,t,n){\\\\\\\"use strict\\\\\\\";(function(){e.exports=/^(https:\\\\\\\\/\\\\\\\\/status.github.com\\\\\\\\/api\\\\\\\\/(status.json|last-message.json|messages.json)$)|(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/(zen|octocat|users|issues|gists|emojis|markdown|meta|rate_limit|feeds|events|repositories(\\\\\\\\/\\\\\\\\d+)?|notifications|notifications\\\\\\\\/threads(\\\\\\\\/[^\\\\\\\\/]+)|notifications\\\\\\\\/threads(\\\\\\\\/[^\\\\\\\\/]+)\\\\\\\\/subscription|gitignore\\\\\\\\/templates(\\\\\\\\/[^\\\\\\\\/]+)?|user(\\\\\\\\/\\\\\\\\d+)?|user(\\\\\\\\/\\\\\\\\d+)?\\\\\\\\/(|repos|orgs|followers|following(\\\\\\\\/[^\\\\\\\\/]+)?|emails(\\\\\\\\/[^\\\\\\\\/]+)?|issues|public_emails|starred|starred(\\\\\\\\/[^\\\\\\\\/]+){2}|teams)|(orgs\\\\\\\\/[^\\\\\\\\/]+)|((organizations)(\\\\\\\\/\\\\\\\\d+)?)|(orgs\\\\\\\\/[^\\\\\\\\/]+)|(organizations\\\\\\\\/\\\\\\\\d+)\\\\\\\\/(repos|issues|members|events|teams|projects)|projects\\\\\\\\/[0-9]+|projects\\\\\\\\/[0-9]+\\\\\\\\/columns|projects\\\\\\\\/columns\\\\\\\\/[0-9]+|projects\\\\\\\\/columns\\\\\\\\/[0-9]+\\\\\\\\/moves|projects\\\\\\\\/columns\\\\\\\\/[0-9]+\\\\\\\\/cards|projects\\\\\\\\/columns\\\\\\\\/cards\\\\\\\\/[0-9]+|projects\\\\\\\\/columns\\\\\\\\/cards\\\\\\\\/[0-9]+\\\\\\\\/moves|teams\\\\\\\\/[^\\\\\\\\/]+|teams\\\\\\\\/[^\\\\\\\\/]+\\\\\\\\/(members(\\\\\\\\/[^\\\\\\\\/]+)?|memberships\\\\\\\\/[^\\\\\\\\/]+|repos|repos(\\\\\\\\/[^\\\\\\\\/]+){2})|users\\\\\\\\/[^\\\\\\\\/]+|users\\\\\\\\/[^\\\\\\\\/]+\\\\\\\\/(repos|orgs|gists|followers|following(\\\\\\\\/[^\\\\\\\\/]+){0,2}|keys|starred|received_events(\\\\\\\\/public)?|events(\\\\\\\\/public)?|events\\\\\\\\/orgs\\\\\\\\/[^\\\\\\\\/]+)|search\\\\\\\\/(repositories|commits|issues|users|code)|gists\\\\\\\\/(public|starred|([a-f0-9]{20,32}|[0-9]+)|([a-f0-9]{20,32}|[0-9]+)\\\\\\\\/forks|([a-f0-9]{20,32}|[0-9]+)\\\\\\\\/comments(\\\\\\\\/[0-9]+)?|([a-f0-9]{20,32}|[0-9]+)\\\\\\\\/star)|repos(\\\\\\\\/[^\\\\\\\\/]+){2}|(repos(\\\\\\\\/[^\\\\\\\\/]+){2}|repositories\\\\\\\\/([0-9]+))\\\\\\\\/(readme|tarball(\\\\\\\\/[^\\\\\\\\/]+)?|zipball(\\\\\\\\/[^\\\\\\\\/]+)?|compare\\\\\\\\/([^\\\\\\\\.{3}]+)\\\\\\\\.{3}([^\\\\\\\\.{3}]+)|deployments(\\\\\\\\/[0-9]+)?|deployments\\\\\\\\/[0-9]+\\\\\\\\/statuses(\\\\\\\\/[0-9]+)?|hooks|hooks\\\\\\\\/[^\\\\\\\\/]+|hooks\\\\\\\\/[^\\\\\\\\/]+\\\\\\\\/tests|assignees|languages|teams|tags|branches(\\\\\\\\/[^\\\\\\\\/]+){0,2}|contributors|subscribers|subscription|stargazers|comments(\\\\\\\\/[0-9]+)?|downloads(\\\\\\\\/[0-9]+)?|forks|milestones|milestones\\\\\\\\/[0-9]+|milestones\\\\\\\\/[0-9]+\\\\\\\\/labels|labels(\\\\\\\\/[^\\\\\\\\/]+)?|releases|releases\\\\\\\\/([0-9]+)|releases\\\\\\\\/([0-9]+)\\\\\\\\/assets|releases\\\\\\\\/latest|releases\\\\\\\\/tags\\\\\\\\/([^\\\\\\\\/]+)|releases\\\\\\\\/assets\\\\\\\\/([0-9]+)|events|notifications|merges|statuses\\\\\\\\/[a-f0-9]{40}|pages|pages\\\\\\\\/builds|pages\\\\\\\\/builds\\\\\\\\/latest|commits|commits\\\\\\\\/[a-f0-9]{40}|commits\\\\\\\\/[a-f0-9]{40}\\\\\\\\/(comments|status|statuses)?|contents\\\\\\\\/|contents(\\\\\\\\/[^\\\\\\\\/]+)*|collaborators(\\\\\\\\/[^\\\\\\\\/]+)?|collaborators\\\\\\\\/([^\\\\\\\\/]+)\\\\\\\\/permission|projects|(issues|pulls)|(issues|pulls)\\\\\\\\/(events|events\\\\\\\\/[0-9]+|comments(\\\\\\\\/[0-9]+)?|[0-9]+|[0-9]+\\\\\\\\/events|[0-9]+\\\\\\\\/comments|[0-9]+\\\\\\\\/labels(\\\\\\\\/[^\\\\\\\\/]+)?)|pulls\\\\\\\\/[0-9]+\\\\\\\\/(files|commits|merge|requested_reviewers|reviews(\\\\\\\\/[0-9]+)?|reviews(\\\\\\\\/[0-9]+)\\\\\\\\/(comments|events|dismissals))|git\\\\\\\\/(refs|refs\\\\\\\\/(.+|heads(\\\\\\\\/[^\\\\\\\\/]+)?|tags(\\\\\\\\/[^\\\\\\\\/]+)?)|trees(\\\\\\\\/[^\\\\\\\\/]+)?|blobs(\\\\\\\\/[a-f0-9]{40}$)?|commits(\\\\\\\\/[a-f0-9]{40}$)?)|stats\\\\\\\\/(contributors|commit_activity|code_frequency|participation|punch_card)|traffic\\\\\\\\/(popular\\\\\\\\/(referrers|paths)|views|clones))|licenses|licenses\\\\\\\\/([^\\\\\\\\/]+)|authorizations|authorizations\\\\\\\\/((\\\\\\\\d+)|clients\\\\\\\\/([^\\\\\\\\/]{20})|clients\\\\\\\\/([^\\\\\\\\/]{20})\\\\\\\\/([^\\\\\\\\/]+))|applications\\\\\\\\/([^\\\\\\\\/]{20})\\\\\\\\/tokens|applications\\\\\\\\/([^\\\\\\\\/]{20})\\\\\\\\/tokens\\\\\\\\/([^\\\\\\\\/]+)|enterprise\\\\\\\\/(settings\\\\\\\\/license|stats\\\\\\\\/(issues|hooks|milestones|orgs|comments|pages|users|gists|pulls|repos|all))|staff\\\\\\\\/indexing_jobs|users\\\\\\\\/[^\\\\\\\\/]+\\\\\\\\/(site_admin|suspended)|setup\\\\\\\\/api\\\\\\\\/(start|upgrade|configcheck|configure|settings(authorized-keys)?|maintenance))(\\\\\\\\?.*)?$/}).call(void 0)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=n(23);function i(){!function(e){if(!(e instanceof i))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(r(i,[{key:\\\\\\\"requestMiddlewareAsync\\\\\\\",value:function(e){null==e.headers&&(e.headers={});e.headers;var t=e.clientOptions,n=t.token,r=t.username,t=t.password;return(n||r&&t)&&(t=n?\\\\\\\"token \\\\\\\"+n:\\\\\\\"Basic \\\\\\\"+o(r+\\\\\\\":\\\\\\\"+t),e.headers.Authorization=t),Promise.resolve(e)}}]),new i)},function(e,t,n){\\\\\\\"use strict\\\\\\\";e.exports=btoa},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=n(25);function i(){!function(e){if(!(e instanceof i))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(r(i,[{key:\\\\\\\"requestMiddlewareAsync\\\\\\\",value:function(e){var t=function(e){for(var t in o)if(o[t].test(e))return t}(e.path);return t&&(e.headers.Accept=t),Promise.resolve(e)}}]),new i)},function(e,t,n){\\\\\\\"use strict\\\\\\\";(function(){e.exports={\\\\\\\"application/vnd.github.drax-preview+json\\\\\\\":/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?(\\\\\\\\/licenses|\\\\\\\\/licenses\\\\\\\\/([^\\\\\\\\/]+)|\\\\\\\\/repos\\\\\\\\/([^\\\\\\\\/]+)\\\\\\\\/([^\\\\\\\\/]+))$/,\\\\\\\"application/vnd.github.v3.star+json\\\\\\\":/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/users\\\\\\\\/([^\\\\\\\\/]+)\\\\\\\\/starred$/,\\\\\\\"application/vnd.github.cloak-preview+json\\\\\\\":/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/search\\\\\\\\/commits$/,\\\\\\\"application/vnd.github.black-cat-preview+json\\\\\\\":/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?\\\\\\\\/repos(\\\\\\\\/[^\\\\\\\\/]+){2}\\\\\\\\/pulls\\\\\\\\/[0-9]+\\\\\\\\/(|requested_reviewers|reviews(\\\\\\\\/[0-9]+)?|reviews(\\\\\\\\/[0-9]+)\\\\\\\\/(comments|events|dismissals))$/,\\\\\\\"application/vnd.github.inertia-preview+json\\\\\\\":/^(https?:\\\\\\\\/\\\\\\\\/[^\\\\\\\\/]+)?(\\\\\\\\/api\\\\\\\\/v3)?(\\\\\\\\/repos(\\\\\\\\/[^\\\\\\\\/]+){2}\\\\\\\\/projects|\\\\\\\\/orgs\\\\\\\\/([^\\\\\\\\/]+)\\\\\\\\/projects|\\\\\\\\/projects\\\\\\\\/([0-9]+|[0-9]+\\\\\\\\/columns|columns|columns\\\\\\\\/[0-9]+|columns\\\\\\\\/[0-9]+\\\\\\\\/moves|columns\\\\\\\\/[0-9]+\\\\\\\\/cards|columns\\\\\\\\/cards\\\\\\\\/[0-9]+|columns\\\\\\\\/cards\\\\\\\\/[0-9]+\\\\\\\\/moves))$/}}).call(void 0)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(){!function(e){if(!(e instanceof o))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(r(o,[{key:\\\\\\\"requestMiddlewareAsync\\\\\\\",value:function(e,t){var n=e.clientOptions.usePostInsteadOfPatch,r=e.method;return n&&\\\\\\\"PATCH\\\\\\\"===r&&(e.method=\\\\\\\"POST\\\\\\\"),Promise.resolve(e)}}]),new o)},function(e,t,n){\\\\\\\"use strict\\\\\\\";function r(e,t){if(!Array.isArray(t))throw new Error(\\\\\\\"Octokat Error: Calling fetchAll on a request that does not yield an array\\\\\\\");return e.push.apply(e,t)}function s(e,t,n){return(e=i(e,t))?e.then(function(e){return r(n,e.items),s(e,t,n)}):n}var o=n(2),i=function(e,t){return\\\\\\\"string\\\\\\\"==typeof e.next_page_url?t.request(\\\\\\\"GET\\\\\\\",e.next_page_url,null,null):e.next_page?e.next_page.fetch():\\\\\\\"string\\\\\\\"==typeof e.nextPageUrl?t.request(\\\\\\\"GET\\\\\\\",e.nextPageUrl,null,null):!!e.nextPage&&e.nextPage.fetch()};e.exports={asyncVerbs:{fetchAll:function(n,t){return function(e){return n.request(\\\\\\\"GET\\\\\\\",\\\\\\\"\\\\\\\"+t+o(e),null,null).then(function(e){var t=[];return r(t,e.items),s(e,n,t)})}}}}},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,s=!1,o=void 0;try{for(var i,a=e[Symbol.iterator]();!(r=(i=a.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){s=!0,o=e}finally{try{!r&&a.return&&a.return()}finally{if(s)throw o}}return n}(e,t);throw new TypeError(\\\\\\\"Invalid attempt to destructure non-iterable instance\\\\\\\")},s=function(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e};function o(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(){!function(e){if(!(e instanceof i))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(s(i,[{key:\\\\\\\"responseMiddlewareAsync\\\\\\\",value:function(e){var t=e.jqXHR,n=e.data;return t&&Array.isArray(n)&&(n={items:n.slice()},(t=t.headers.get(\\\\\\\"Link\\\\\\\"))&&t.split(\\\\\\\",\\\\\\\").forEach(function(e){var t=e.match(/\u003C([^>]+)>; rel=\\\\\\\"([^\\\\\\\"]+)\\\\\\\"/),e=r(t,3),t=(e[0],e[1]),e=e[2];n[e+\\\\\\\"_page_url\\\\\\\"]=t}),e.data=n),Promise.resolve(e)}}]),new i)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(){!function(e){if(!(e instanceof o))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this),this._cachedETags={}}e.exports=(r(o,[{key:\\\\\\\"get\\\\\\\",value:function(e,t){return this._cachedETags[e+\\\\\\\" \\\\\\\"+t]}},{key:\\\\\\\"add\\\\\\\",value:function(e,t,n,r,s){return this._cachedETags[e+\\\\\\\" \\\\\\\"+t]={eTag:n,data:r,status:s}}},{key:\\\\\\\"requestMiddlewareAsync\\\\\\\",value:function(e){var t=e.clientOptions,n=e.method,r=e.path;null==e.headers&&(e.headers={});t=t.cacheHandler||this;return t.get(n,r)?e.headers[\\\\\\\"If-None-Match\\\\\\\"]=t.get(n,r).eTag:e.headers[\\\\\\\"If-Modified-Since\\\\\\\"]=\\\\\\\"Thu, 01 Jan 1970 00:00:00 GMT\\\\\\\",Promise.resolve(e)}},{key:\\\\\\\"responseMiddlewareAsync\\\\\\\",value:function(e,t){var n=e.clientOptions,r=e.request,s=e.status,o=e.jqXHR,i=e.data;if(!o)return Promise.resolve(e);if(o){var a=r.method,r=r.path,n=n.cacheHandler||this;if(304===s||0===s){var u=n.get(a,r);if(!u)throw new Error(\\\\\\\"ERROR: Bug in Octokat cacheHandler for path '\\\\\\\"+a+\\\\\\\" \\\\\\\"+r+\\\\\\\"'. It had an eTag but not the cached response.\\\\\\\");i=u.data,s=u.status;u=u.eTag}else\\\\\\\"GET\\\\\\\"===a&&o.headers.get(\\\\\\\"ETag\\\\\\\")&&(u=o.headers.get(\\\\\\\"ETag\\\\\\\"),n.add(a,r,u,i,o.status));return e.data=i,e.status=s,Promise.resolve(e)}}}]),new o)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=n(2);function i(){!function(e){if(!(e instanceof i))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this),this.verbs={readBinary:function(e,t){return{method:\\\\\\\"GET\\\\\\\",path:\\\\\\\"\\\\\\\"+e+o(t),options:{isRaw:!0,isBase64:!0}}}}}e.exports=(r(i,[{key:\\\\\\\"requestMiddlewareAsync\\\\\\\",value:function(e){var t=e.options;return t&&t.isBase64&&(e.headers.Accept=\\\\\\\"application/vnd.github.raw\\\\\\\",e.mimeType=\\\\\\\"text/plain; charset=x-user-defined\\\\\\\"),Promise.resolve(e)}},{key:\\\\\\\"responseMiddlewareAsync\\\\\\\",value:function(e){var t=e.options,n=e.data;if(t&&t.isBase64){for(var r=\\\\\\\"\\\\\\\",s=function(e,t,n){for(var r=[],s=e\u003Ct,o=n?s?t+1:t-1:t,i=e;s?i\u003Co:o\u003Ci;s?i++:i--)r.push(i);return r}(0,n.length,!1),o=0;o\u003Cs.length;o++){var i=s[o];r+=String.fromCharCode(255&n.charCodeAt(i))}e.data=r}return Promise.resolve(e)}}]),new i)},function(e,t,n){\\\\\\\"use strict\\\\\\\";var r=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e};function s(e,t){for(var n=0;n\u003Ct.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\\\\\"value\\\\\\\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=n(0);function i(){!function(e){if(!(e instanceof i))throw new TypeError(\\\\\\\"Cannot call a class as a function\\\\\\\")}(this)}e.exports=(r(i,[{key:\\\\\\\"responseMiddlewareAsync\\\\\\\",value:function(e){var t=e.data,t=this.replace(t);return e.data=t,Promise.resolve(e)}},{key:\\\\\\\"replace\\\\\\\",value:function(e){return Array.isArray(e)?this._replaceArray(e):\\\\\\\"function\\\\\\\"!=typeof e&&!(e instanceof Date)&&e===Object(e)?this._replaceObject(e):e}},{key:\\\\\\\"_replaceObject\\\\\\\",value:function(e){for(var t={},n=Object.keys(e),r=0;r\u003Cn.length;r++){var s=n[r],o=e[s];this._replaceKeyValue(t,s,o)}return t}},{key:\\\\\\\"_replaceArray\\\\\\\",value:function(e){for(var t=this,n=e.map(function(e){return t.replace(e)}),r=Object.keys(e),s=0;s\u003Cr.length;s++){var o=r[s],i=e[o];this._replaceKeyValue(n,o,i)}return n}},{key:\\\\\\\"_replaceKeyValue\\\\\\\",value:function(e,t,n){return e[o.camelize(t)]=this.replace(n)}}]),new i)}],r.c=s,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\\\\\\\"a\\\\\\\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\\\\\\\"\\\\\\\",r(r.s=7);function r(e){if(s[e])return s[e].exports;var t=s[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,r),t.l=!0,t.exports}var n,s});\\\",\\n            \\\"type\\\": \\\"application/javascript\\\",\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads-github/octokat.js\\\",\\n            \\\"module-type\\\": \\\"library\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads-github/readme\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads-github/readme\\\",\\n            \\\"text\\\": \\\"''Experimental'' proof of concept Github uploader module for the File Uploads plugin. Saves uploads to Github for use with Github pages. Based on the Octokat library. Requires that credentials have been filled in for the [[Github saver|$:/core/ui/ControlPanel/Saving/GitHub]].\\\\n\\\\nIntended for use with wikis hosted on Github Pages. \\\\n\\\\nPlease see:\\\\n\\\\n* The [[terms of service and guidelines|https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages]] for using Github Pages. \\\\n* How to for [[hosting a TiddlyWiki on Github Pages|https://kookma.github.io/TW5-GitHub-Saver/]].\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads-github/settings\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads-github/settings\\\",\\n            \\\"text\\\": \\\"Please configure the Github repository, username and personal access token in the [[Github Saver settings|$:/core/ui/ControlPanel/Saving/GitHub]].\\\\n\\\\n[[Github upload path relative to root|$:/config/file-uploads/github/uploadpath]]: \\\\n\u003C$edit-text tiddler=\\\\\\\"$:/config/file-uploads/github/uploadpath\\\\\\\" field=\\\\\\\"text\\\\\\\" tag=\\\\\\\"input\\\\\\\" />\\\\n\\\"\\n        }\\n    }\\n}\"\n},\n\n\"$:/plugins/commons/file-uploads\": {\n    \"title\": \"$:/plugins/commons/file-uploads\",\n    \"name\": \"File Uploads\",\n    \"description\": \"Upload binary files to external storage\",\n    \"author\": \"Saq Imtiaz\",\n    \"core-version\": \">=5.2.0\",\n    \"list\": \"readme settings\",\n    \"version\": \"0.1.8\",\n    \"plugin-type\": \"plugin\",\n    \"dependents\": \"\",\n    \"type\": \"application/json\",\n    \"text\": \"{\\n    \\\"tiddlers\\\": {\\n        \\\"$:/config/fileUploads/uploadsEnabled\\\": {\\n            \\\"title\\\": \\\"$:/config/fileUploads/uploadsEnabled\\\",\\n            \\\"text\\\": \\\"yes\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/dummy-uploader.js\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/dummy-uploader.js\\\",\\n            \\\"text\\\": \\\"/*\\\\\\\\\\\\ntitle: $:/plugins/commons/file-uploads/dummy-uploader.js\\\\ntype: application/javascript\\\\nmodule-type: uploader\\\\n\\\\nMocks uploading to Fission Webnative filing system\\\\nUseful for testing the upload mechanism without uploading anything\\\\n\\\\n\\\\\\\\*/\\\\n(function(){\\\\n\\\\n\\\\n/*jslint node: true, browser: true */\\\\n/*global $tw: false */\\\\n\\\\\\\"use strict\\\\\\\";\\\\n\\\\nexports.name = \\\\\\\"dummy\\\\\\\";\\\\n\\\\nvar DummyUserName;\\\\n\\\\nexports.create = function(params) {\\\\n\\\\treturn new DummyUploader(params);\\\\n};\\\\n\\\\nfunction DummyUploader(params) {\\\\n\\\\tthis.params = params || {};\\\\n\\\\tthis.items = [];\\\\n\\\\tthis.logger = new $tw.utils.Logger(\\\\\\\"dummy-uploader\\\\\\\");\\\\n\\\\tthis.logger.log(\\\\\\\"DummyUploader\\\\\\\",params);\\\\n};\\\\n\\\\nDummyUploader.prototype.initialize = function(callback) {\\\\n\\\\tthis.logger.log(\\\\\\\"uploader initialize\\\\\\\");\\\\n\\\\tcallback();\\\\n};\\\\n\\\\n/*\\\\nArguments:\\\\nuploadItem: object representing tiddler to be uploaded\\\\ncallback accepts two arguments:\\\\n\\\\terr: error object if there was an error\\\\n\\\\tuploadItemInfo: object corresponding to the tiddler being uploaded with the following properties set:\\\\n\\\\t- title\\\\n\\\\t- canonical_uri (if available)\\\\n\\\\t- fields (optional)\\\\n\\\\t- uploadComplete (boolean)\\\\n\\\\t- getUint8Array()\\\\n\\\\t- getBlob()\\\\n*/\\\\nDummyUploader.prototype.uploadFile = function(uploadItem,callback) {  \\\\n\\\\tvar self = this,\\\\n\\\\t\\\\tuploadInfo = { title: uploadItem.title };\\\\n\\\\t//this.items.push(uploadItem);\\\\n\\\\t// Mock uploading the file by logging to console.\\\\n\\\\tthis.logger.log(\\\\\\\"Saved \\\\\\\" + uploadItem.title);\\\\n\\\\tvar canonical_uri = \\\\\\\"https://myusername.files.fission.name/p/\\\\\\\" + uploadItem.filename;\\\\n\\\\t// Set the canonical_uri if available \\\\n\\\\tuploadInfo.canonical_uri = canonical_uri;\\\\n\\\\t// Set updateProgress to true if the progress bar should be updated\\\\n\\\\t// For some uploaders where the data is just being added to the payload with no uploading taking place we may not want to update the progress bar\\\\n\\\\tuploadInfo.updateProgress = true;\\\\n\\\\t// Set uploadComplete to true if the uploaded file has been persisted and is available at the canonical_uri\\\\n\\\\t// This flag triggers the creation of a canonical_uri tiddler corresponding to the uploaded file\\\\n\\\\tuploadInfo.uploadComplete = false;\\\\n\\\\tcallback(null,uploadInfo);\\\\n};\\\\n\\\\n/*\\\\nArguments:\\\\ncallback accepts two arguments:\\\\n\\\\tstatus: true if there was no error, otherwise false\\\\n\\\\tuploadInfoArray (optional): array of uploadInfo objects corresponding to the tiddlers that have been uploaded\\\\n\\\\t\\\\tthis is needed and should set the canonical_uri for each uploadItem if:\\\\n\\\\t\\\\t- (a) uploadInfo.uploadComplete was not set to true in uploadFile AND \\\\n\\\\t\\\\t- (b) uploadInfo.canonical_uri was not set in uploadFile\\\\n*/\\\\nDummyUploader.prototype.deinitialize = function(callback) {\\\\n\\\\t// Mock finishing up operations that will complete the upload and persist the files\\\\n\\\\tthis.logger.log(\\\\\\\"uploader deinitialize\\\\\\\");\\\\n\\\\tcallback();\\\\n};\\\\n\\\\n})();\\\\n\\\",\\n            \\\"type\\\": \\\"application/javascript\\\",\\n            \\\"module-type\\\": \\\"uploader\\\"\\n        },\\n        \\\"$:/config/fileUploadFilter\\\": {\\n            \\\"title\\\": \\\"$:/config/fileUploadFilter\\\",\\n            \\\"text\\\": \\\"[all[tiddlers]is[binary]!is[draft]!has[_canonical_uri]] :filter[get[text]length[]compare:integer:gteq[100000]]\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/images/upload-off\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/images/upload-off\\\",\\n            \\\"caption\\\": \\\"upload-off\\\",\\n            \\\"text\\\": \\\"\u003Csvg width=\\\\\\\"22pt\\\\\\\" height=\\\\\\\"22pt\\\\\\\" class=\\\\\\\"tc-image-tmd-upload-off tc-image-button\\\\\\\" viewBox=\\\\\\\"0 0 24 24\\\\\\\">\u003Cpath d=\\\\\\\"M22.11 21.46L2.39 1.73L1.11 3L6.56 8.45L5 10H8.11L9 10.89V16H14.11L16.11 18H5V20H18.11L20.84 22.73L22.11 21.46M15 10H19L12 3L9.1 5.9L15 11.8V10Z\\\\\\\" />\u003C/svg>\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/images/upload\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/images/upload\\\",\\n            \\\"caption\\\": \\\"upload\\\",\\n            \\\"text\\\": \\\"\u003Csvg width=\\\\\\\"22pt\\\\\\\" height=\\\\\\\"22pt\\\\\\\" class=\\\\\\\"tc-image-tmd-upload tc-image-button\\\\\\\" viewBox=\\\\\\\"0 0 24 24\\\\\\\">\u003Cpath d=\\\\\\\"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z\\\\\\\" />\u003C/svg>\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/Notifications/Uploaded\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/Notifications/Uploaded\\\",\\n            \\\"text\\\": \\\"Uploads completed.\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/Notifications/Uploading\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/Notifications/Uploading\\\",\\n            \\\"text\\\": \\\"Uploading \u003C\u003Ccount>> file(s).\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/Buttons/toggle-uploads\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/Buttons/toggle-uploads\\\",\\n            \\\"tags\\\": \\\"$:/tags/PageControls\\\",\\n            \\\"caption\\\": \\\"{{$:/plugins/commons/file-uploads/images/upload}} Toggle file uploads\\\",\\n            \\\"description\\\": \\\"Enable/disable uploading binary tiddlers\\\",\\n            \\\"text\\\": \\\"\\\\\\\\define toggleActions()\\\\n\u003C$action-setfield $tiddler=\\\\\\\"$:/config/fileUploads/uploadsEnabled\\\\\\\" text={{{ [{$:/config/fileUploads/uploadsEnabled}match[yes]then[no]else[yes]] }}}/>\\\\n\\\\\\\\end\\\\n\\\\n\\\\\\\\whitespace trim\\\\n\u003C$button tooltip=\\\\\\\"Toggle file uploads\\\\\\\" aria-label=\\\\\\\"Toggle file uploads\\\\\\\" class=\u003C\u003Ctv-config-toolbar-class>> actions=\u003C\u003CtoggleActions>> >\\\\n\\\\t\u003C$list filter=\\\\\\\"[\u003Ctv-config-toolbar-icons>match[yes]]\\\\\\\" variable=\\\\\\\"listItem\\\\\\\">\\\\n\\\\t\\\\t\u003C$transclude tiddler={{{ [{$:/config/fileUploads/uploadsEnabled}match[no]then[$:/plugins/commons/file-uploads/images/upload-off]] :else[[$:/plugins/commons/file-uploads/images/upload]] }}}/>\\\\n\\\\t\u003C/$list>\\\\n\\\\t\u003C$list filter=\\\\\\\"[\u003Ctv-config-toolbar-text>match[yes]]\\\\\\\">\\\\n\\\\t\\\\t\u003Cspan class=\\\\\\\"tc-btn-text\\\\\\\">\\\\n\\\\t\\\\t\\\\t\u003C$text text=\\\\\\\"Toggle file uploads\\\\\\\"/>\\\\n\\\\t\\\\t\u003C/span>\\\\n\\\\t\u003C/$list>\\\\n\u003C/$button>\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/readme\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/readme\\\",\\n            \\\"text\\\": \\\"Experimental plugin in active development for uploading binary tiddlers to different storage backends and creating canonical_uri tiddlers in their stead.\\\\n\\\\nIt is recommended to ''disable ~AutoSave when using this plugin'', to avoid saving imported binary tiddlers twice and using up twice the bandwidth.\\\\n\\\\nStorage backends are pluggable and can be added via uploader modules. This plugin includes a \\\\\\\"dummy\\\\\\\" uploader module that implements the minimal interface needed for an uploader module but does not actually upload anything and just logs to the developer console.\\\\n\\\\nAfter installing this plugin and at least one uploader sub-plugin, you must configure the uploader to use in the [[settings|$:/plugins/commons/file-uploads/settings]] of this plugin.\\\\n\\\\nThis plugin uses a [[filter|$:/config/fileUploadFilter]] to determine which tiddlers are uploaded. The default filter uploads all binary tiddlers over 100kb in size.\\\\n\\\\nAlternatively, you can disable the automatic file uploads and use the widget message `tm-upload-tiddlers` to manually upload specific tiddlers as files. The message accepts a `param` that is a filter which specifies the tiddlers to upload.\\\\n\\\\nExamples:\\\\n\\\\n* `\u003C$action-sendmessage $message=\\\\\\\"tm-upload-tiddlers\\\\\\\" $param=\\\\\\\"MyTiddler\\\\\\\"/>`\\\\n* `\u003C$action-sendmessage $message=\\\\\\\"tm-upload-tiddlers\\\\\\\" $param=\\\\\\\"[type[image/png]]\\\\\\\"/>`\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/settings\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/settings\\\",\\n            \\\"text\\\": \\\"[[Filter that determines which tiddlers are uploaded|$:/config/fileUploadFilter]]:\\\\n\\\\n\u003C$edit-text tiddler=\\\\\\\"$:/config/fileUploadFilter\\\\\\\" field=\\\\\\\"text\\\\\\\" tag=\\\\\\\"textarea\\\\\\\" class=\\\\\\\"tc-edit-texteditor\\\\\\\" />\\\\n\\\\n---\\\\n\\\\nFile uploader modules add support for different storage backends to upload files to.\\\\n\\\\n\u003C$link to=\\\\\\\"$:/config/fileUploader\\\\\\\">File uploader: \u003C/$link>\u003C$select tiddler=\\\\\\\"$:/config/fileUploader\\\\\\\">\\\\n\u003C$list filter=\\\\\\\"[[uploader]modules[]moduleproperty[name]]\\\\\\\">\\\\n\u003Coption value=\u003C\u003CcurrentTiddler>>>\u003C$transclude field=\\\\\\\"title\\\\\\\">\u003C$text text=\u003C\u003CcurrentTiddler>>/>\u003C/$transclude>\u003C/option>\\\\n\u003C/$list>\\\\n\u003C/$select>\\\\n\\\\n\u003C$vars uploaderPlugin={{{ [[uploader]modules[name],{$:/config/fileUploader}shadowsource[]] }}}>\\\\n\u003C$list filter=\\\\\\\"[\u003CuploaderPlugin>!match[$:/plugins/commons/file-uploads]plugintiddlers[]] :filter[removeprefix\u003CuploaderPlugin>match[/settings]]\\\\\\\" variable=\\\\\\\"settingsTiddler\\\\\\\">\\\\n\\\\n\\\\t\u003C$transclude tiddler=\u003C\u003CuploaderPlugin>> subtiddler={{{ [\u003CsettingsTiddler>addsuffix[/uploader]]  }}}>\\\\n\\\\t\\\\t\\\\n\\\\t\\\\t\u003C$transclude tiddler=\u003C\u003CuploaderPlugin>> subtiddler=\u003C\u003CsettingsTiddler>>/>\\\\n\\\\n\\\\t\u003C/$transclude>\\\\n\\\\n\u003C/$list>\\\\n\u003C/$vars>\\\\n\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/startup.js\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/startup.js\\\",\\n            \\\"text\\\": \\\"/*\\\\\\\\\\\\ntitle: $:/plugins/commons/file-uploads/startup.js\\\\ntype: application/javascript\\\\nmodule-type: startup\\\\n\\\\\\\\*/\\\\n(function(){\\\\n\\\\n/*jslint node: true, browser: true */\\\\n/*global $tw: false */\\\\n\\\\\\\"use strict\\\\\\\";\\\\n\\\\nexports.name = \\\\\\\"upload-handler\\\\\\\";\\\\nexports.platforms = [\\\\\\\"browser\\\\\\\"];\\\\nexports.after = [\\\\\\\"startup\\\\\\\"];\\\\n\\\\nexports.startup = function() {\\\\n\\\\t$tw.uploadHandler = new $tw.UploadHandler({\\\\n\\\\t\\\\twiki: $tw.wiki\\\\n\\\\t});\\\\n};\\\\n\\\\n})();\\\\n\\\",\\n            \\\"type\\\": \\\"application/javascript\\\",\\n            \\\"module-type\\\": \\\"startup\\\"\\n        },\\n        \\\"$:/plugins/commons/file-uploads/uploadhandler.js\\\": {\\n            \\\"title\\\": \\\"$:/plugins/commons/file-uploads/uploadhandler.js\\\",\\n            \\\"text\\\": \\\"/*\\\\\\\\\\\\ntitle: $:/plugins/commons/file-uploads/uploadhandler.js\\\\ntype: application/javascript\\\\nmodule-type: global\\\\nThe upload handler manages uploading binary tiddlers to external storage.\\\\n\\\\\\\\*/\\\\n(function(){\\\\n\\\\n/*jslint node: true, browser: true */\\\\n/*global $tw: false */\\\\n\\\\\\\"use strict\\\\\\\";\\\\n\\\\nUploadHandler.prototype.titleFileUploadFilter = \\\\\\\"$:/config/fileUploadFilter\\\\\\\";\\\\nUploadHandler.prototype.titleUploader = \\\\\\\"$:/config/fileUploader\\\\\\\";\\\\nUploadHandler.prototype.titleUploadedNotification = \\\\\\\"$:/plugins/commons/file-uploads/Notifications/Uploaded\\\\\\\";\\\\nUploadHandler.prototype.titleUploadingNotification = \\\\\\\"$:/plugins/commons/file-uploads/Notifications/Uploading\\\\\\\";\\\\nUploadHandler.prototype.titleUploadsEnabled = \\\\\\\"$:/config/fileUploads/uploadsEnabled\\\\\\\";\\\\n\\\\nfunction UploadHandler(options) {\\\\n\\\\tvar self = this;\\\\n\\\\tthis.wiki = options.wiki;\\\\n\\\\tthis.logger = new $tw.utils.Logger(\\\\\\\"upload-handler\\\\\\\");\\\\n\\\\tthis.options = options;\\\\n\\\\n\\\\tvar callback = function(err,nextCallback) {\\\\n\\\\t\\\\tdelete self.uploadTask;\\\\n\\\\t\\\\tif(!err) {\\\\n\\\\t\\\\t\\\\t//self.logger.clearAlerts();\\\\n\\\\t\\\\t\\\\t$tw.notifier.display(self.titleUploadedNotification);\\\\n\\\\t\\\\t\\\\tif(nextCallback) {\\\\n\\\\t\\\\t\\\\t\\\\tself.logger.log(\\\\\\\"checking for pending uploads\\\\\\\");\\\\n\\\\t\\\\t\\\\t\\\\t// Check if there are any new tiddlers that need to be uploaded\\\\n\\\\t\\\\t\\\\t\\\\t$tw.utils.nextTick(nextCallback);\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t}\\\\n\\\\t};\\\\n\\\\n\\\\tvar runTask = function(uploadTask,nextCallback) {\\\\n\\\\t\\\\t$tw.notifier.display(self.titleUploadingNotification,{variables:{\\\\n\\\\t\\\\t\\\\tcount: uploadTask.taskTiddlers.length.toString()\\\\n\\\\t\\\\t}});\\\\n\\\\t\\\\tself.uploadTask = uploadTask;\\\\n\\\\t\\\\tself.uploadTask.run(function(err){\\\\n\\\\t\\\\t\\\\tcallback(err,nextCallback);\\\\n\\\\t\\\\t});\\\\n\\\\t}\\\\n\\\\n\\\\t$tw.rootWidget.addEventListener(\\\\\\\"tm-upload-tiddlers\\\\\\\",function(event){\\\\n\\\\t\\\\tvar filter = event.param ||\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\ttiddlersToUpload = self.wiki.filterTiddlers(filter,$tw.rootWidget);\\\\n\\\\t\\\\tif(!self.uploadTask) {\\\\n\\\\t\\\\t\\\\tvar uploadTask = self.getUploadTask(tiddlersToUpload);\\\\n\\\\t\\\\t\\\\tif(uploadTask) {\\\\n\\\\t\\\\t\\\\t\\\\trunTask(uploadTask);\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\tself.logger.alert(\\\\\\\"There is already an upload task in progress.\\\\\\\");\\\\n\\\\t\\\\t}\\\\n\\\\t});\\\\n\\\\n\\\\tthis.wiki.addEventListener(\\\\\\\"change\\\\\\\",function(changes){\\\\n\\\\t\\\\tvar uploadsEnabled = self.wiki.getTiddlerText(self.titleUploadsEnabled,\\\\\\\"yes\\\\\\\").trim() === \\\\\\\"yes\\\\\\\";\\\\n\\\\t\\\\tif(!uploadsEnabled) {\\\\n\\\\t\\\\t\\\\treturn;\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\tvar upload = function() {\\\\n\\\\t\\\\t\\\\tvar uploadFilter = self.wiki.getTiddlerText(self.titleFileUploadFilter),\\\\n\\\\t\\\\t\\\\t\\\\ttiddlersToUpload = self.wiki.filterTiddlers(uploadFilter);\\\\n\\\\t\\\\t\\\\tif(tiddlersToUpload.length > 0) {\\\\n\\\\t\\\\t\\\\t\\\\t// If we are not already uploading then start a new upload task\\\\n\\\\t\\\\t\\\\t\\\\t// If an upload task is already in progress then new tiddlers that need to be uploaded will be picked up in the next task \\\\n\\\\t\\\\t\\\\t\\\\tif(!self.uploadTask) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t// The tiddlers currently matching the upload filter are the paylaod for the upload task\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tvar uploadTask = self.getUploadTask(tiddlersToUpload);\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tif(uploadTask) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\trunTask(uploadTask,upload);\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\t\\\\tself.logger.log(\\\\\\\"no pending uploads\\\\\\\");\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t};\\\\n\\\\t\\\\t// ToDo find a cleaner alternative for logging\\\\n\\\\t\\\\t// Filter out alert tiddlers from changes otherwise the alerts we show keep triggering the change listener\\\\n\\\\t\\\\tvar changedTiddlers = [];\\\\n\\\\t\\\\t$tw.utils.each(changes,function(change,title){\\\\n\\\\t\\\\t\\\\tvar tiddler = self.wiki.tiddlerExists(title) && self.wiki.getTiddler(title);\\\\n\\\\t\\\\t\\\\tif(tiddler){\\\\n\\\\t\\\\t\\\\t\\\\tchangedTiddlers.push(title);\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t});\\\\n\\\\t\\\\tvar filteredChanges = self.wiki.filterTiddlers(\\\\\\\"[!prefix[$:/temp/alerts/alert]]\\\\\\\",null,self.wiki.makeTiddlerIterator(changedTiddlers));\\\\n\\\\t\\\\tif(filteredChanges.length > 0) {\\\\n\\\\t\\\\t\\\\tupload();\\\\n\\\\t\\\\t}\\\\n\\\\t});\\\\n\\\\n\\\\t$tw.addUnloadTask(function(event) {\\\\n\\\\t\\\\tvar confirmationMessage;\\\\n\\\\t\\\\tif(self.isDirty()) {\\\\n\\\\t\\\\t\\\\t// Modern browsers do not use the specified string\\\\n\\\\t\\\\t\\\\tconfirmationMessage = $tw.language.getString(\\\\\\\"UnsavedChangesWarning\\\\\\\");\\\\n\\\\t\\\\t\\\\tevent.returnValue = confirmationMessage; // Gecko\\\\t\\\\t\\\\t\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn confirmationMessage;\\\\n\\\\t});\\\\n};\\\\n\\\\nUploadHandler.prototype.getUploadTask = function(tiddlersToUpload) {\\\\n\\\\tvar uploadTask = new UploadTask(tiddlersToUpload,{\\\\n\\\\t\\\\twiki: this.wiki,\\\\n\\\\t\\\\tuploaderConfig: this.wiki.getTiddlerText(this.titleUploader,\\\\\\\"\\\\\\\").trim(),\\\\n\\\\t\\\\tlogger: this.logger\\\\n\\\\t});\\\\n\\\\tif(!uploadTask.uploader) {\\\\n\\\\t\\\\tthis.logger.alert(\\\\\\\"Please check the uploader configuration for the [[FileUploads|$:/plugins/commons/file-uploads]] plugin.\\\\\\\");\\\\n\\\\t\\\\treturn null;\\\\n\\\\t} else {\\\\n\\\\t\\\\treturn uploadTask;\\\\n\\\\t}\\\\n};\\\\n\\\\nUploadHandler.prototype.isDirty = function() {\\\\n\\\\treturn !!this.uploadTask;\\\\n};\\\\n\\\\nfunction UploadTask(tiddlers,options) {\\\\n\\\\tvar self = this;\\\\n\\\\tthis.wiki = options.wiki;\\\\n\\\\tthis.taskTiddlers = tiddlers;\\\\n\\\\tthis.tiddlerInfo = {};\\\\n\\\\tthis.logger = options.logger;\\\\n\\\\tthis.uploader = this.getUploader(options.uploaderConfig);\\\\n};\\\\n\\\\nUploadTask.prototype.displayError = function(msg,err) {\\\\n\\\\tthis.logger.alert(msg + \\\\\\\":\\\\\\\",err);\\\\n};\\\\n\\\\nUploadTask.prototype.run = function(uploadHandlerCallback){\\\\n\\\\tvar self = this;\\\\n\\\\tself.uploader.initialize(function(err){\\\\n\\\\t\\\\tif(err) {\\\\n\\\\t\\\\t\\\\tself.displayError(\\\\\\\"Error in uploader.initialize, aborting uploads\\\\\\\");\\\\n\\\\t\\\\t\\\\tuploadHandlerCallback(err);\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\tself.processTiddlerQueue(uploadHandlerCallback);\\\\n\\\\t\\\\t}\\\\n\\\\t});\\\\n};\\\\n\\\\nUploadTask.prototype.getUploader = function(uploaderName) {\\\\n\\\\tvar uploader;\\\\n\\\\t$tw.modules.forEachModuleOfType(\\\\\\\"uploader\\\\\\\",function(title,module) {\\\\n\\\\t\\\\tif(module.name === uploaderName) {\\\\n\\\\t\\\\t\\\\tuploader = module;\\\\n\\\\t\\\\t}\\\\n\\\\t});\\\\n\\\\treturn uploader && uploader.create({logger:this.logger});\\\\n};\\\\n\\\\n// Returns true if changeCount in tiddlerInfo is the same as the current changeCount of the tiddler\\\\nUploadTask.prototype.changeCountUnchanged = function(title) {\\\\n\\\\tvar tiddler = this.wiki.getTiddler(title);\\\\n\\\\tif(tiddler && this.tiddlerInfo[title]) {\\\\n\\\\t\\\\tvar changeCount = this.wiki.getChangeCount(title);\\\\n\\\\t\\\\tif(changeCount === this.tiddlerInfo[title].changeCount) {\\\\n\\\\t\\\\t\\\\treturn true;\\\\n\\\\t\\\\t}\\\\n\\\\t}\\\\n\\\\treturn false;\\\\n};\\\\n\\\\n// Converts a binary tiddler into a canonical_uri tiddler if:\\\\n// - the tiddler still exists\\\\n// - the tiddler has not changed since we uploaded it\\\\nUploadTask.prototype.makeCanonicalURITiddler = function(title) {\\\\n\\\\tvar tiddler = this.wiki.getTiddler(title),\\\\n\\\\t\\\\tcanonical_uri = this.tiddlerInfo[title].canonical_uri,\\\\n\\\\t\\\\tfields = this.tiddlerInfo[title].fields;\\\\n\\\\t\\\\n\\\\tif(tiddler && canonical_uri && this.changeCountUnchanged(title)) {\\\\n\\\\t\\\\tthis.wiki.addTiddler(new $tw.Tiddler(tiddler,{text:\\\\\\\"\\\\\\\",_canonical_uri:canonical_uri},fields));\\\\n\\\\t} else {\\\\n\\\\t\\\\tconsole.log(\\\\\\\"Could not convert \\\\\\\" + title + \\\\\\\" to a canonical_uri tiddler\\\\\\\");\\\\n\\\\t}\\\\n};\\\\n\\\\nUploadTask.prototype.processTiddlerQueue = function(uploadHandlerCallback) {\\\\n\\\\tvar self = this,\\\\n\\\\t\\\\tnextTiddlerIndex = 0;\\\\n\\\\t\\\\n\\\\tvar deinitializeCallback = function(err,uploadInfoArray) {\\\\n\\\\t\\\\tif(err) {\\\\n\\\\t\\\\t\\\\tself.displayError(err,\\\\\\\"Error in uploader deinitialize\\\\\\\");\\\\n\\\\t\\\\t\\\\tuploadHandlerCallback(err);\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\t// Some uploaders may not have canonical_uris earlier and may pass an array of item objects with canonical_uri set\\\\n\\\\t\\\\t\\\\t$tw.utils.each(uploadInfoArray,function(uploadInfo){\\\\n\\\\t\\\\t\\\\t\\\\t// For every uploaded tiddler save the canonical_uri and fields if one has been returned\\\\n\\\\t\\\\t\\\\t\\\\tif(uploadInfo.uploadComplete && uploadInfo.canonical_uri && uploadInfo.title && self.tiddlerInfo[uploadInfo.title]) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tself.tiddlerInfo[uploadInfo.title].canonical_uri = uploadInfo.canonical_uri;\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tif(uploadInfo.fields) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tself.tiddlerInfo[uploadInfo.title].fields = uploadInfo.fields;\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t});\\\\n\\\\t\\\\t\\\\t// Convert all uploaded tiddlers for which we have a canonical_uri to canonical_uri tiddlers\\\\n\\\\t\\\\t\\\\tfor(var title in self.tiddlerInfo) {\\\\n\\\\t\\\\t\\\\t\\\\tself.makeCanonicalURITiddler(title);\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\tdelete self.uploader;\\\\n\\\\t\\\\t\\\\tself.tiddlerInfo = {};\\\\n\\\\t\\\\t\\\\tself.logger.log(\\\\\\\"uploader deinitialize callback\\\\\\\");\\\\n\\\\t\\\\t\\\\tself.logger.log(\\\\\\\"Uploads completed\\\\\\\");\\\\n\\\\t\\\\t\\\\tuploadHandlerCallback();\\\\n\\\\t\\\\t}\\\\n\\\\t};\\\\n\\\\t\\\\n\\\\tvar uploadedTiddlerCallback = function(err,uploadInfo) {\\\\n\\\\t\\\\tif(err) {\\\\n\\\\t\\\\t\\\\tself.displayError(\\\\\\\"there was an error uploading \\\\\\\" + uploadInfo.title + \\\\\\\", aborting uploads\\\\\\\");\\\\n\\\\t\\\\t\\\\tuploadHandlerCallback(err);\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\tself.logger.log(\\\\\\\"upload callback for \\\\\\\" + uploadInfo.title);\\\\n\\\\t\\\\t\\\\t// Save the canonical_uri if one has been set\\\\n\\\\t\\\\t\\\\tif(uploadInfo.canonical_uri) {\\\\n\\\\t\\\\t\\\\t\\\\tself.tiddlerInfo[uploadInfo.title].canonical_uri = uploadInfo.canonical_uri;\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t// Save the fields if one has been set\\\\n\\\\t\\\\t\\\\tif(uploadInfo.fields) {\\\\n\\\\t\\\\t\\\\t\\\\tself.tiddlerInfo[uploadInfo.title].fields = uploadInfo.fields;\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t// If uploadComplete is true then convert the tiddler to a canonical_uri tiddler\\\\n\\\\t\\\\t\\\\tif(uploadInfo.uploadComplete) {\\\\n\\\\t\\\\t\\\\t\\\\tself.makeCanonicalURITiddler(uploadInfo.title);\\\\n\\\\t\\\\t\\\\t\\\\tdelete self.tiddlerInfo[uploadInfo.title];\\\\n\\\\t\\\\t\\\\t\\\\t//below line is for debugging only\\\\n\\\\t\\\\t\\\\t\\\\t//self.wiki.setText(item.title,\\\\\\\"upload-status\\\\\\\",null,\\\\\\\"uploaded\\\\\\\");\\\\n\\\\t\\\\t\\\\t}\\\\t\\\\t\\\\t\\\\n\\\\t\\\\t\\\\tnextTiddlerIndex++;\\\\n\\\\t\\\\t\\\\tuploadNextTiddler();\\\\n\\\\t\\\\t}\\\\n\\\\t};\\\\n\\\\t\\\\n\\\\tvar uploadNextTiddler = function() {\\\\n\\\\t\\\\tvar title,\\\\n\\\\t\\\\t\\\\ttiddler;\\\\n\\\\t\\\\t// Skip over any queued tiddlers that might have been deleted\\\\n\\\\t\\\\twhile(nextTiddlerIndex \u003C self.taskTiddlers.length && !tiddler) {\\\\n\\\\t\\\\t\\\\ttitle = self.taskTiddlers[nextTiddlerIndex];\\\\n\\\\t\\\\t\\\\ttiddler = self.wiki.getTiddler(title);\\\\n\\\\t\\\\t\\\\tif(!tiddler) {\\\\n\\\\t\\\\t\\\\t\\\\tnextTiddlerIndex++;\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\tif(tiddler) {\\\\n\\\\t\\\\t\\\\tself.tiddlerInfo[title] = {\\\\n\\\\t\\\\t\\\\t\\\\tchangeCount : self.wiki.getChangeCount(title)\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\tvar uploadItem = self.getTiddlerUploadItem(tiddler);\\\\n\\\\t\\\\t\\\\tself.uploader.uploadFile(uploadItem,function(err,uploadItemInfo){\\\\n\\\\t\\\\t\\\\t\\\\t$tw.utils.nextTick(function(){uploadedTiddlerCallback(err,uploadItemInfo)});\\\\n\\\\t\\\\t\\\\t});\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\tself.uploader.deinitialize(deinitializeCallback);\\\\n\\\\t\\\\t}\\\\n\\\\t};\\\\n\\\\tuploadNextTiddler();\\\\n};\\\\n\\\\nUploadTask.prototype.getTiddlerUploadItem = function(tiddler) {\\\\n\\\\t//\\\\tTODO:\\\\n\\\\t\\\\t// Need to sanitize tiddler titles to make sure they are valid file names\\\\n\\\\t\\\\t// file names must be unique or we could overwrite the file corresponding to another uploaded tiddler.\\\\n\\\\treturn new UploadItem(tiddler);\\\\n}\\\\n\\\\nfunction UploadItem(tiddler) {\\\\n\\\\tthis.title = tiddler.fields.title;\\\\n\\\\tthis.filename = tiddler.fields.title;\\\\n\\\\tthis.text = tiddler.fields.text || \\\\\\\"\\\\\\\";\\\\n\\\\tthis.type = tiddler.fields.type || \\\\\\\"text/vnd.tiddlywiki\\\\\\\";\\\\n\\\\tthis.isBase64 = ($tw.config.contentTypeInfo[tiddler.fields.type] || {}).encoding  === \\\\\\\"base64\\\\\\\";\\\\n};\\\\n\\\\nUploadItem.prototype.getUint8Array = function() {\\\\n\\\\tvar byteCharacters = atob(this.text),\\\\n\\\\t\\\\tbyteArray = new Uint8Array(byteCharacters.length);\\\\n\\\\tfor(var i=0; i \u003C byteCharacters.length; i++) {\\\\n\\\\t\\\\tbyteArray[i] = byteCharacters.charCodeAt(i);\\\\n\\\\t}\\\\n\\\\treturn byteArray;\\\\t\\\\n};\\\\n\\\\nUploadItem.prototype.getBlob = function() {\\\\n\\\\tif(this.isBase64) {\\\\n\\\\t\\\\tvar byteArray = this.getUint8Array();\\\\n\\\\t\\\\treturn new Blob([byteArray], {type: this.type});\\\\t\\\\t\\\\n\\\\t} else {\\\\n\\\\t\\\\treturn new Blob([this.text],{type: \\\\\\\"text/plain\\\\\\\"});\\\\n\\\\t}\\\\n};\\\\n\\\\nexports.UploadHandler = UploadHandler;\\\\n\\\\n})();\\\\n\\\",\\n            \\\"type\\\": \\\"application/javascript\\\",\\n            \\\"module-type\\\": \\\"global\\\"\\n        }\\n    }\\n}\"\n}}\n}","title":"$:/plugins/Telumire/RSS","type":"application/json","tags":"","name":"RSS","description":"Generate rss feeds for your wiki","author":"Telumire","source":"https://plm.tiddlyhost.com/#:[[$:/plugins/Telumire/RSS]]","version":"0.0.3","core-version":"5.2.7","list":"readme settings","modified":"20230509020137075","parent-plugin":"$:/plugins/commons/file-uploads","dependents":"$:/plugins/commons/file-uploads-github","version-0.0.3":"* Fixed issue with discoverfeed where the github username was not available to the filter generating the href\n* Added [[template|$:/plugins/Telumire/RSS/itemTemplate/history]] for plugin history note\n* Github path fixed","plugin-type":"plugin","packaged-by":"Gatha on 9th May 2023, 04:02:02"}

